<!DOCTYPE html><html lang="ru"><head><script>window.currentUser = null;</script><script>window.rateUsdRub = 66.0591;</script><title itemprop="name">Оставить уникальные элементы массива</title><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=yes, minimum-scale=1.0"><meta name="apple-mobile-web-app-capable" content="yes"><script>if (window.devicePixelRatio > 1) document.cookie = 'pixelRatio=' + window.devicePixelRatio + ';path=/;expires=Tue, 19 Jan 2038 03:14:07 GMT';</script><link href="../../fonts.googleapis.com/css@family=Open+Sans_3A400italic,700italic,400,700_257COpen+Sans+Condensed_3A700&subset=latin,latin-ext,cyrillic,cyrillic-ext" rel="stylesheet"><link rel="apple-touch-icon-precomposed" href="../img/favicon/apple-touch-icon-precomposed.png"><link rel="canonical" href="../../https@learn.javascript.ru/task/array-unique"><meta name="msapplication-TileColor" content="#222A2C"><meta name="msapplication-TileImage" content="/img/favicon/tileicon.png"><!-- favicon the rest--><link rel="icon" href="../img/favicon/favicon.png"><meta itemprop="image" content="https://learn.javascript.ru/img/site_preview_ru_512x512.png"><meta property="og:title" content="Оставить уникальные элементы массива"><meta property="og:image" content="https://learn.javascript.ru/img/site_preview_ru_1200x630.png"><meta property="og:image:type" content="image/png"><meta property="og:image:width" content="1200"><meta property="og:image:height" content="630"><meta property="fb:admins" content="100001562528165"><meta name="twitter:card" content="summary"><meta name="twitter:title" content="Оставить уникальные элементы массива"><meta name="twitter:site" content="@iliakan"><meta name="twitter:creator" content="@iliakan"><meta name="twitter:image" content="https://learn.javascript.ru/img/site_preview_ru_512x512.png"><link href="../pack/styles.ead298d93e9433c2e2d210c1d20fc610.css" rel="stylesheet"><script>window.GA_ID = "UA-2056213-16";</script><script>window.YANDEX_METRIKA_ID = 17649010;</script><script>window.GoogleAnalyticsObject="ga",window.ga=function(){window.ga.q.push(arguments)},window.ga.q=[],window.ga.l=Date.now(),ga("create",GA_ID,"auto"),window.currentUser?ga("set","&uid",currentUser.id):ga("set","anonymizeIp",!0),window.addEventListener("error",function(e){var n=(e.filename||e.errorUrl)+": "+(e.lineno||e.errorLine),r=e.stack||e.error&&e.error.stack;ga("send","exception",{exDescription:e.message+" "+n+" "+r,exFatal:!0})});</script><script src="../../https@www.google-analytics.com/analytics.js" async></script><script>ga('send', 'pageview');</script><script>window.metrika={reachGoal:function(){}},window.yandex_metrika_callbacks=[function(){try{window.metrika=new Ya.Metrika({id:YANDEX_METRIKA_ID,webvisor:!0,clickmap:!0,params:{user:window.currentUser&&window.currentUser.id}}),metrika.trackLinks({delay:150}),window.addEventListener("error",function(r){window.metrika.reachGoal("JSERROR",{src:(r.filename||r.errorUrl)+": "+(r.lineno||r.errorLine),stack:r.stack||r.error&&r.error.stack,message:r.message})})}catch(r){}}];</script><!--ipt src="//mc.yandex.ru/metrika/watch.js" async></scri--><script>window.RECAPTCHA_ID = "6Lf9NyETAAAAACZlg-a9Us2SxvYbeVC1ROWaWv4O";</script><script src="../init.js@5"></script><script src="../pack/head.bb2a8b8ef7f0aac07286.js" defer></script><script src="../pack/tutorial.bb2a8b8ef7f0aac07286.js" defer></script><script src="../pack/footer.bb2a8b8ef7f0aac07286.js" defer></script></head><body class="no-icons"><script>window.fontTest();</script><div class="page-wrapper"><div class="page"><script>if(localStorage.noSidebar){document.querySelector(".page").classList.remove("page_sidebar_on");var pageWrapper=document.querySelector(".page-wrapper");pageWrapper&&pageWrapper.classList.remove("page-wrapper_sidebar_on")}setTimeout(function(){document.querySelector(".page").classList.add("page_sidebar-animation-on")},0);</script><div class="page__inner"><main class="main main_width-limit"><div style="display:none" class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="../default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="../js" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Язык JavaScript</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-3" itemprop="child" class="breadcrumbs__item"><a href="../data-structures" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Структуры данных</span></a></li><li id="breadcrumb-3" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="../array-methods" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Массивы: методы</span></a></li></div><div itemscope itemtype="http://schema.org/TechArticle" class="task-single"><meta itemprop="name" content="Оставить уникальные элементы массива"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><a href="../array-methods" class="task-single__back"><span>Вернуться к уроку</span></a><div itemprop="articleBody" class="task task-single__task"><div class="task__header"><div class="task__title-wrap"><h2 class="task__title">Оставить уникальные элементы массива</h2></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 3</span></div></div><div class="task__content"><p>Пусть <code>arr</code> – массив строк.</p>
<p>Напишите функцию <code>unique(arr)</code>, которая возвращает массив, содержащий только уникальные элементы <code>arr</code>.</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function unique(arr) {
  /* ваш код */
}

var strings = [&quot;кришна&quot;, &quot;кришна&quot;, &quot;харе&quot;, &quot;харе&quot;,
  &quot;харе&quot;, &quot;харе&quot;, &quot;кришна&quot;, &quot;кришна&quot;, &quot;8-()&quot;
];

alert( unique(strings) ); // кришна, харе, 8-()</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/QMnlU1GSUul4II7xJy6X?p=preview" target="_blank" data-plunk-id="QMnlU1GSUul4II7xJy6X">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__step"><button type="button" class="task__step-show">Решение перебором (медленное)</button><div class="task__answer-content"><h4 class="task__step-title">Решение перебором (медленное)</h4><p>Пройдём по массиву вложенным циклом.</p>
<p>Для каждого элемента мы будем искать, был ли такой уже. Если был – игнорировать:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function unique(arr) {
  var result = [];

  nextInput:
    for (var i = 0; i &lt; arr.length; i++) {
      var str = arr[i]; // для каждого элемента
      for (var j = 0; j &lt; result.length; j++) { // ищем, был ли он уже?
        if (result[j] == str) continue nextInput; // если да, то следующий
      }
      result.push(str);
    }

  return result;
}

var strings = [&quot;кришна&quot;, &quot;кришна&quot;, &quot;харе&quot;, &quot;харе&quot;,
  &quot;харе&quot;, &quot;харе&quot;, &quot;кришна&quot;, &quot;кришна&quot;, &quot;8-()&quot;
];

alert( unique(strings) ); // кришна, харе, 8-()</code></pre>
        </div>
      </div>
      
      </div><p>Давайте посмотрим, насколько быстро он будет работать.</p>
<p>Предположим, в массиве <code>100</code> элементов. Если все они одинаковые, то <code>result</code> будет состоять из одного элемента и вложенный цикл будет выполняться сразу. В этом случае всё хорошо.</p>
<p>А если все, или почти все элементы разные?</p>
<p>В этом случае для каждого элемента понадобится обойти весь текущий массив результатов, после чего – добавить в этот массив.</p>
<ol>
<li>Для первого элемента – это обойдётся в <code>0</code> операций доступа к элементам <code>result</code> (он пока пустой).</li>
<li>Для второго элемента – это обойдётся в <code>1</code> операцию доступа к элементам <code>result</code>.</li>
<li>Для третьего элемента – это обойдётся в <code>2</code> операции доступа к элементам <code>result</code>.</li>
<li>…Для n-го элемента – это обойдётся в <code>n-1</code> операций доступа к элементам <code>result</code>.</li>
</ol>
<p>Всего <code>0 + 1 + 2 + … + n-1 = (n-1)*n/2 = n<sup>2</sup>/2 – n/2</code> (как сумма арифметической прогрессии), то есть количество операций растёт примерно как квадрат от <code>n</code>.</p>
<p>Это очень быстрый рост. Для <code>100</code> элементов – <code>4950</code> операций, для <code>1000</code> – <code>499500</code> (по формуле выше).</p>
<p>Поэтому такое решение подойдёт только для небольших массивов. Вместо вложенного <code>for</code> можно использовать и <code>arr.indexOf</code>, ситуация от этого не поменяется, так как <code>indexOf</code> тоже ищет перебором.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Решение с объектом (быстрое)</button><div class="task__answer-content"><h4 class="task__step-title">Решение с объектом (быстрое)</h4><p>Наилучшая техника для выбора уникальных строк – использование вспомогательного объекта <code>obj</code>. Ведь название свойства в объекте, с одной стороны – строка, а с другой – всегда уникально. Повторная запись в свойство с тем же именем перезапишет его.</p>
<p>Например, если <code>&quot;харе&quot;</code> попало в объект один раз (<code>obj[&quot;харе&quot;] = true</code>), то второе такое же присваивание ничего не изменит.</p>
<p>Решение ниже создаёт объект <code>obj = {}</code> и записывает в него все строки как имена свойств. А затем собирает свойства из объекта в массив через <code>Object.keys()</code>. Дубликатов уже не будет.</p>
<div data-trusted="1" class="code-example" data-highlight-block="5-5">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function unique(arr) {
  var obj = {};

  for (var i = 0; i &lt; arr.length; i++) {
    var str = arr[i];
    obj[str] = true; // запомнить строку в виде свойства объекта
  }

  return Object.keys(obj); // или собрать ключи перебором для IE8-
}

var strings = [&quot;кришна&quot;, &quot;кришна&quot;, &quot;харе&quot;, &quot;харе&quot;,
  &quot;харе&quot;, &quot;харе&quot;, &quot;кришна&quot;, &quot;кришна&quot;, &quot;8-()&quot;
];

alert( unique(strings) ); // кришна, харе, 8-()</code></pre>
        </div>
      </div>
      
      </div><p>Так что можно положить все значения как ключи в объект, а потом достать.</p>
<p><a href="http://plnkr.co/edit/yOFZHiNq7kjWVQN8wsnv?p=preview" target="_blank" data-plunk-id="yOFZHiNq7kjWVQN8wsnv">Открыть решение с тестами в песочнице.</a></p></div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></main></div></div></div><div class="page-footer"><div class="page-footer__left"><ul class="page-footer__list"><li class="page-footer__item">©&nbsp;2007—2018&nbsp; Илья Кантор</li><li class="page-footer__item"><a href="../about#contact-us" class="page-footer__link">связаться с нами</a></li><li class="page-footer__item"><a href="../about" class="page-footer__link">о проекте</a></li><li class="page-footer__item"><a href="../agreement" class="page-footer__link">соглашение</a></li><li class="page-footer__item"><a href="http://slack.javascript.ru/" class="page-footer__slack">slack-чат</a></li></ul></div><div class="page-footer__right"><ul class="page-footer__list"><li class="page-footer__item">powered by <a rel="nofollow" href="http://nodejs.org/" class="page-footer__link">node.js</a>&nbsp;&amp;&nbsp;<a rel="nofollow" href="http://github.com/iliakan/javascript-tutorial-ru" class="page-footer__link">open source</a></li></ul></div></div></body></html>