<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><div style="display:none" class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="../default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="../ui.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Документ, события, интерфейсы</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-3" itemprop="child" class="breadcrumbs__item"><a href="../forms-controls.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Формы, элементы управления</span></a></li><li id="breadcrumb-3" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="../focus-blur.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Фокусировка: focus/blur</span></a></li></div><div itemscope itemtype="http://schema.org/TechArticle" class="task-single"><meta itemprop="name" content="Поле, предупреждающее о включенном CapsLock"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><a href="../focus-blur.htm" class="task-single__back"><span>Вернуться к уроку</span></a><div itemprop="articleBody" class="task task-single__task"><div class="task__header"><div class="task__title-wrap"><h2 class="task__title">Поле, предупреждающее о включенном CapsLock</h2></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 3</span></div></div><div class="task__content"><p>Создайте поле, которое будет предупреждать пользователя, если включен <kbd class="shortcut">CapsLock</kbd>. Выключение <kbd class="shortcut">CapsLock</kbd> уберёт предупреждение.</p>
<p>Такое поле может помочь избежать ошибок при вводе пароля.</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:80px" src="https://js.cx/task/capslock-warning-field/solution/"></iframe>
  </div><p><a href="http://plnkr.co/edit/yS73r1zkI9g69LocCuey?p=preview" target="_blank" data-plunk-id="yS73r1zkI9g69LocCuey">Открыть песочницу для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__step"><button type="button" class="task__step-show">Алгоритм</button><div class="task__answer-content"><h4 class="task__step-title">Алгоритм</h4><p>JavaScript не имеет доступа к текущему состоянию <kbd class="shortcut">CapsLock</kbd>. При загрузке страницы не известно, включён он или нет.</p>
<p>Но мы можем догадаться о его состоянии из событий:</p>
<ol>
<li>Проверив символ, полученный по <code>keypress</code>. Символ в верхнем регистре без нажатого <kbd class="shortcut">Shift</kbd> означает, что включён <kbd class="shortcut">CapsLock</kbd>. Аналогично, символ в нижнем регистре, но с <kbd class="shortcut">Shift</kbd> говорят о включенном <kbd class="shortcut">CapsLock</kbd>. Свойство <code>event.shiftKey</code> показывает, нажат ли <kbd class="shortcut">Shift</kbd>. Так мы можем точно узнать, нажат ли <kbd class="shortcut">CapsLock</kbd>.</li>
<li>Проверять <code>keydown</code>. Если нажат CapsLock (скан-код равен <code>20</code>), то переключить состояние, но лишь в том случае, когда оно уже известно.
Под Mac так делать не получится, поскольку клавиатурные события с CapsLock  <a href="../keyboard-events.htm#keyboard-events-order">работают некорректно</a>.</li>
</ol>
<p>Имея состояние <code>CapsLock</code> в переменной, можно при фокусировке на <code>INPUT</code> выдавать предупреждение.</p>
<p>Отслеживать оба события: <code>keydown</code> и <code>keypress</code> хорошо бы на уровне документа, чтобы уже на момент входа в поле ввода мы знали состояние CapsLock.</p>
<p>Но при вводе сразу в нужный <code>input</code> событие <code>keypress</code> событие доплывёт до <code>document</code> и поставит состояние CapsLock <em>после того, как сработает на <code>input</code></em>. Как это обойти – подумайте сами.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Решение</button><div class="task__answer-content"><h4 class="task__step-title">Решение</h4><p>При загрузке страницы, когда еще ничего не набрано, мы ничего не знаем о состоянии <kbd class="shortcut">CapsLock</kbd>, поэтому оно равно <code>null</code>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var capsLockEnabled = null;</code></pre>
        </div>
      </div>
      
      </div><p>Когда нажата клавиша, мы можем попытаться проверить, совпадает ли регистр символа и состояние <kbd class="shortcut">Shift</kbd>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">document.onkeypress = function(e) {

  var chr = getChar(e);
  if (!chr) return; // специальная клавиша

  if (chr.toLowerCase() == chr.toUpperCase()) {
    // символ, который не имеет регистра, такой как пробел,
    // мы не можем использовать для определения состояния CapsLock
    return;
  }

  capsLockEnabled = (chr.toLowerCase() == chr &amp;&amp; e.shiftKey) || (chr.toUpperCase() == chr &amp;&amp; !e.shiftKey);
}</code></pre>
        </div>
      </div>
      
      </div><p>Когда пользователь нажимает <kbd class="shortcut">CapsLock</kbd>, мы должны изменить его текущее состояние. Но мы можем сделать это только если знаем, что был нажат <kbd class="shortcut">CapsLock</kbd>.</p>
<p>Например, когда пользователь открыл страницу, мы не знаем, включен ли <kbd class="shortcut">CapsLock</kbd>. Затем, мы получаем событие <code>keydown</code> для <kbd class="shortcut">CapsLock</kbd>. Но мы все равно не знаем его состояния, был ли <kbd class="shortcut">CapsLock</kbd> <em>выключен</em> или, наоборот, включен.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">if (navigator.platform.substr(0, 3) != 'Mac') { // событие для CapsLock глючит под Mac
  document.onkeydown = function(e) {
    if (e.keyCode == 20 &amp;&amp; capsLockEnabled !== null) {
      capsLockEnabled = !capsLockEnabled;
    }
  };
}</code></pre>
        </div>
      </div>
      
      </div><p>Теперь поле. Задание состоит в том, чтобы предупредить пользователя о включенном CapsLock, чтобы уберечь его от неправильного ввода.</p>
<ol>
<li>
<p>Для начала, когда пользователь сфокусировался на поле, мы должны вывести предупреждение о CapsLock, если он включен.</p>
</li>
<li>
<p>Пользователь начинает ввод. Каждое событие <code>keypress</code> всплывает до обработчика <code>document.keypress</code>, который обновляет состояние <code>capsLockEnabled</code>.</p>
<p>Мы не можем использовать событие <code>input.onkeypress</code>, для отображения состояния пользователю, потому что оно сработает <em>до</em> <code>document.onkeypress</code> (из-за всплытия) и, следовательно, до того, как мы узнаем состояние <kbd class="shortcut">CapsLock</kbd>.</p>
<p>Есть много способов решить эту проблему. Можно, например, назначить обработчик состояния CapsLock на  событие <code>input.onkeyup</code>. То есть, индикация будет с задержкой, но это несущественно.</p>
<p>Альтернативное решение – добавить на <code>input</code> такой же обработчик, как и на <code>document.onkeypress</code>.</p>
</li>
<li>
<p>…И наконец, пользователь убирает фокус с поля. Предупреждение может быть видно, если <kbd class="shortcut">CapsLock</kbd> включен, но так как пользователь уже ушел с поля, то нам нужно спрятать предупреждение.</p>
</li>
</ol>
<p>Код проверки поля:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-markup"><code class="language-markup">&lt;input type=&quot;text&quot; onkeyup=&quot;checkCapsWarning(event)&quot; onfocus=&quot;checkCapsWarning(event)&quot; onblur=&quot;removeCapsWarning()&quot; /&gt;

&lt;div style=&quot;display:none;color:red&quot; id=&quot;caps&quot;&gt;Внимание: нажат CapsLock!&lt;/div&gt;

&lt;script&gt;
  function checkCapsWarning() {
    document.getElementById('caps').style.display = capsLockEnabled ? 'block' : 'none';
  }

  function removeCapsWarning() {
    document.getElementById('caps').style.display = 'none';
  }
&lt;/script&gt;</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/6V1honnJn6WeOtX5TUcF?p=preview" target="_blank" data-plunk-id="6V1honnJn6WeOtX5TUcF">Открыть решение в песочнице.</a></p></div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></main></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>