<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><div style="display:none" class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="../default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="../ui.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Документ, события, интерфейсы</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-3" itemprop="child" class="breadcrumbs__item"><a href="../events-and-interfaces.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Основы работы с событиями</span></a></li><li id="breadcrumb-3" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="../event-delegation.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Делегирование событий</span></a></li></div><div itemscope itemtype="http://schema.org/TechArticle" class="task-single"><meta itemprop="name" content="Раскрывающееся дерево"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><a href="../event-delegation.htm" class="task-single__back"><span>Вернуться к уроку</span></a><div itemprop="articleBody" class="task task-single__task"><div class="task__header"><div class="task__title-wrap"><h2 class="task__title">Раскрывающееся дерево</h2></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div></div><div class="task__content"><p>Создайте дерево, которое по клику на заголовок скрывает-показывает детей:</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:300px" src="https://js.cx/task/sliding-tree/solution/"></iframe>
  </div><p>Требования:</p>
<ul>
<li>Использовать делегирование.</li>
<li>Клик вне текста заголовка (на пустом месте) ничего делать не должен.</li>
<li>При наведении на заголовок – он становится жирным, реализовать через CSS.</li>
</ul>
<p>P.S. При необходимости HTML/CSS дерева можно изменить.</p>
<p><a href="http://plnkr.co/edit/KsgE3vEEHODQIdojYeku?p=preview" target="_blank" data-plunk-id="KsgE3vEEHODQIdojYeku">Открыть песочницу для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__step"><button type="button" class="task__step-show">Схема решения</button><div class="task__answer-content"><h4 class="task__step-title">Схема решения</h4><p>Дерево устроено как вложенный список.</p>
<p>Клики на все элементы можно поймать, повесив единый обработчик <code>onclick</code> на внешний <code>UL</code>.</p>
<p>Как поймать клик на заголовке? Элемент <code>LI</code> является блочным, поэтому нельзя понять, был ли клик на <em>тексте</em>, или справа от него.</p>
<p>Например, ниже – участок дерева с выделенными рамкой узлами. Кликните справа от любого заголовка. Видите, клик ловится? А лучше бы такие клики (не на тексте) игнорировать.</p>
<div data-trusted="0" class="code-example" data-demo-height="190" data-autorun="true">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-markup"><code class="language-markup">&lt;style&gt;
  li {
    border: 1px solid green;
  }
&lt;/style&gt;

&lt;ul onclick=&quot;alert(event.target)&quot;&gt;
  &lt;li&gt;Млекопетающие
    &lt;ul&gt;
      &lt;li&gt;Коровы&lt;/li&gt;
      &lt;li&gt;Ослы&lt;/li&gt;
      &lt;li&gt;Собаки&lt;/li&gt;
      &lt;li&gt;Тигры&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</code></pre>
        </div>
      </div>
      <div class="code-result code-example__result">
        <iframe
          class="code-result__iframe"
          name="code-result-buyfdf"
          style="height:190px"
          src="about:blank"></iframe>
      </div>
      </div><p>В примере выше видно, что проблема в верстке, в том что <code>LI</code> занимает всю ширину. Можно кликнуть справа от текста, это все еще <code>LI</code>.</p>
<p>Один из способов это поправить – обернуть заголовки в дополнительный элемент <code>SPAN</code>, и обрабатывать только клики внутри <code>SPAN'ов</code>, получать по <code>SPAN'у</code> его родителя <code>LI</code> и ставить ему класс открыт/закрыт.</p>
<p>Напишите для этого JavaScript-код.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Оборачиваем заголовки в SPAN</button><div class="task__answer-content"><h4 class="task__step-title">Оборачиваем заголовки в SPAN</h4><p>Следующий код ищет все <code>LI</code> и оборачивает текстовые узлы в <code>SPAN</code>.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var treeUl = document.getElementsByTagName('ul')[0];

var treeLis = treeUl.getElementsByTagName('li');

for (var i = 0; i &lt; treeLis.length; i++) {
  var li = treeLis[i];

  var span = document.createElement('span');
  li.insertBefore(span, li.firstChild); // добавить пустой SPAN
  span.appendChild(span.nextSibling); // переместить в него заголовок
}</code></pre>
        </div>
      </div>
      
      </div><p>Теперь можно отслеживать клики <em>на заголовках</em>.</p>
<p>Так выглядит дерево с обёрнутыми в <code>SPAN</code> заголовками и делегированием:</p>
<div data-trusted="0" class="code-example" data-demo-height="190" data-autorun="true">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-markup"><code class="language-markup">&lt;style&gt;
  span {
    border: 1px solid red;
  }
&lt;/style&gt;

&lt;ul onclick=&quot;alert(event.target.tagName)&quot;&gt;
  &lt;li&gt;&lt;span&gt;Млекопетающие&lt;/span&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;Коровы&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;Ослы&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;Собаки&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;Тигры&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</code></pre>
        </div>
      </div>
      <div class="code-result code-example__result">
        <iframe
          class="code-result__iframe"
          name="code-result-6amqfl"
          style="height:190px"
          src="about:blank"></iframe>
      </div>
      </div><p>Так как <code>SPAN</code> – инлайновый элемент, он всегда такого же размера как текст. Да здравствует <code>SPAN</code>!</p>
<p>В реальной жизни дерево, скорее всего, будет сразу со <code>SPAN</code>: если HTML-код дерева генерируется на сервере, то это несложно, если дерево генерируется в JavaScript – тем более просто.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Итоговое решение</button><div class="task__answer-content"><h4 class="task__step-title">Итоговое решение</h4><p>Для делегирования нужно по клику понять, на каком узле он произошел.</p>
<p>В нашем случае у <code>SPAN</code> нет детей-элементов, поэтому не нужно подниматься вверх по цепочке родителей. Достаточно просто проверить <code>event.target.tagName == 'SPAN'</code>, чтобы понять, где был клик, и спрятать потомков.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var tree = document.getElementsByTagName('ul')[0];

tree.onclick = function(event) {
  var target = event.target;

  if (target.tagName != 'SPAN') {
    return; // клик был не на заголовке
  }

  var li = target.parentNode; // получить родительский LI

  // получить UL с потомками -- это первый UL внутри LI
  var childrenContainer = li.getElementsByTagName('ul')[0];

  if (!childrenContainer) return; // потомков нет -- ничего не надо делать

  // спрятать/показать (можно и через CSS-класс)
  childrenContainer.hidden = !childrenContainer.hidden;
}</code></pre>
        </div>
      </div>
      
      </div><p>Выделение узлов жирным при наведении делается при помощи CSS-селектора <code>:hover</code>.</p>
<p><a href="http://plnkr.co/edit/62Z7toAcJGiLk95mBtUQ?p=preview" target="_blank" data-plunk-id="62Z7toAcJGiLk95mBtUQ">Открыть решение в песочнице.</a></p></div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></main></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>