<!DOCTYPE html><html lang="ru"><head><script>window.currentUser = null;</script><script>window.rateUsdRub = 65.5235;</script><title itemprop="name">Раскрывающееся дерево</title><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=yes, minimum-scale=1.0"><meta name="apple-mobile-web-app-capable" content="yes"><script>if (window.devicePixelRatio > 1) document.cookie = 'pixelRatio=' + window.devicePixelRatio + ';path=/;expires=Tue, 19 Jan 2038 03:14:07 GMT';</script><link href="../../fonts.googleapis.com/css@family=Open+Sans_3A400italic,700italic,400,700_257COpen+Sans+Condensed_3A700&subset=latin,latin-ext,cyrillic,cyrillic-ext" rel="stylesheet"><link rel="apple-touch-icon-precomposed" href="../img/favicon/apple-touch-icon-precomposed.png"><link rel="canonical" href="../../https@learn.javascript.ru/task/sliding-tree"><meta name="msapplication-TileColor" content="#222A2C"><meta name="msapplication-TileImage" content="/img/favicon/tileicon.png"><!-- favicon the rest--><link rel="icon" href="../img/favicon/favicon.png"><meta itemprop="image" content="https://learn.javascript.ru/img/site_preview_ru_512x512.png"><meta property="og:title" content="Раскрывающееся дерево"><meta property="og:image" content="https://learn.javascript.ru/img/site_preview_ru_1200x630.png"><meta property="og:image:type" content="image/png"><meta property="og:image:width" content="1200"><meta property="og:image:height" content="630"><meta property="fb:admins" content="100001562528165"><meta name="twitter:card" content="summary"><meta name="twitter:title" content="Раскрывающееся дерево"><meta name="twitter:site" content="@iliakan"><meta name="twitter:creator" content="@iliakan"><meta name="twitter:image" content="https://learn.javascript.ru/img/site_preview_ru_512x512.png"><link href="../pack/styles.ead298d93e9433c2e2d210c1d20fc610.css" rel="stylesheet"><script>window.GA_ID = "UA-2056213-16";</script><script>window.YANDEX_METRIKA_ID = 17649010;</script><script>window.GoogleAnalyticsObject="ga",window.ga=function(){window.ga.q.push(arguments)},window.ga.q=[],window.ga.l=Date.now(),ga("create",GA_ID,"auto"),window.currentUser?ga("set","&uid",currentUser.id):ga("set","anonymizeIp",!0),window.addEventListener("error",function(e){var n=(e.filename||e.errorUrl)+": "+(e.lineno||e.errorLine),r=e.stack||e.error&&e.error.stack;ga("send","exception",{exDescription:e.message+" "+n+" "+r,exFatal:!0})});</script><script src="../../https@www.google-analytics.com/analytics.js" async></script><script>ga('send', 'pageview');</script><script>window.metrika={reachGoal:function(){}},window.yandex_metrika_callbacks=[function(){try{window.metrika=new Ya.Metrika({id:YANDEX_METRIKA_ID,webvisor:!0,clickmap:!0,params:{user:window.currentUser&&window.currentUser.id}}),metrika.trackLinks({delay:150}),window.addEventListener("error",function(r){window.metrika.reachGoal("JSERROR",{src:(r.filename||r.errorUrl)+": "+(r.lineno||r.errorLine),stack:r.stack||r.error&&r.error.stack,message:r.message})})}catch(r){}}];</script><!--ipt src="//mc.yandex.ru/metrika/watch.js" async></scri--><script>window.RECAPTCHA_ID = "6Lf9NyETAAAAACZlg-a9Us2SxvYbeVC1ROWaWv4O";</script><script src="../init.js@5"></script><script src="../pack/head.bb2a8b8ef7f0aac07286.js" defer></script><script src="../pack/tutorial.bb2a8b8ef7f0aac07286.js" defer></script><script src="../pack/footer.bb2a8b8ef7f0aac07286.js" defer></script></head><body class="no-icons"><script>window.fontTest();</script><div class="page-wrapper"><div class="page"><script>if(localStorage.noSidebar){document.querySelector(".page").classList.remove("page_sidebar_on");var pageWrapper=document.querySelector(".page-wrapper");pageWrapper&&pageWrapper.classList.remove("page-wrapper_sidebar_on")}setTimeout(function(){document.querySelector(".page").classList.add("page_sidebar-animation-on")},0);</script><div class="page__inner"><main class="main main_width-limit"><div style="display:none" class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="../default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="../ui" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Документ, события, интерфейсы</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-3" itemprop="child" class="breadcrumbs__item"><a href="../events-and-interfaces" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Основы работы с событиями</span></a></li><li id="breadcrumb-3" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="../event-delegation" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Делегирование событий</span></a></li></div><div itemscope itemtype="http://schema.org/TechArticle" class="task-single"><meta itemprop="name" content="Раскрывающееся дерево"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><a href="../event-delegation" class="task-single__back"><span>Вернуться к уроку</span></a><div itemprop="articleBody" class="task task-single__task"><div class="task__header"><div class="task__title-wrap"><h2 class="task__title">Раскрывающееся дерево</h2></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div></div><div class="task__content"><p>Создайте дерево, которое по клику на заголовок скрывает-показывает детей:</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:300px" src="https://js.cx/task/sliding-tree/solution/"></iframe>
  </div><p>Требования:</p>
<ul>
<li>Использовать делегирование.</li>
<li>Клик вне текста заголовка (на пустом месте) ничего делать не должен.</li>
<li>При наведении на заголовок – он становится жирным, реализовать через CSS.</li>
</ul>
<p>P.S. При необходимости HTML/CSS дерева можно изменить.</p>
<p><a href="http://plnkr.co/edit/KsgE3vEEHODQIdojYeku?p=preview" target="_blank" data-plunk-id="KsgE3vEEHODQIdojYeku">Открыть песочницу для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__step"><button type="button" class="task__step-show">Схема решения</button><div class="task__answer-content"><h4 class="task__step-title">Схема решения</h4><p>Дерево устроено как вложенный список.</p>
<p>Клики на все элементы можно поймать, повесив единый обработчик <code>onclick</code> на внешний <code>UL</code>.</p>
<p>Как поймать клик на заголовке? Элемент <code>LI</code> является блочным, поэтому нельзя понять, был ли клик на <em>тексте</em>, или справа от него.</p>
<p>Например, ниже – участок дерева с выделенными рамкой узлами. Кликните справа от любого заголовка. Видите, клик ловится? А лучше бы такие клики (не на тексте) игнорировать.</p>
<div data-trusted="0" class="code-example" data-demo-height="190" data-autorun="true">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-markup"><code class="language-markup">&lt;style&gt;
  li {
    border: 1px solid green;
  }
&lt;/style&gt;

&lt;ul onclick=&quot;alert(event.target)&quot;&gt;
  &lt;li&gt;Млекопетающие
    &lt;ul&gt;
      &lt;li&gt;Коровы&lt;/li&gt;
      &lt;li&gt;Ослы&lt;/li&gt;
      &lt;li&gt;Собаки&lt;/li&gt;
      &lt;li&gt;Тигры&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</code></pre>
        </div>
      </div>
      <div class="code-result code-example__result">
        <iframe
          class="code-result__iframe"
          name="code-result-buyfdf"
          style="height:190px"
          src="about:blank"></iframe>
      </div>
      </div><p>В примере выше видно, что проблема в верстке, в том что <code>LI</code> занимает всю ширину. Можно кликнуть справа от текста, это все еще <code>LI</code>.</p>
<p>Один из способов это поправить – обернуть заголовки в дополнительный элемент <code>SPAN</code>, и обрабатывать только клики внутри <code>SPAN'ов</code>, получать по <code>SPAN'у</code> его родителя <code>LI</code> и ставить ему класс открыт/закрыт.</p>
<p>Напишите для этого JavaScript-код.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Оборачиваем заголовки в SPAN</button><div class="task__answer-content"><h4 class="task__step-title">Оборачиваем заголовки в SPAN</h4><p>Следующий код ищет все <code>LI</code> и оборачивает текстовые узлы в <code>SPAN</code>.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var treeUl = document.getElementsByTagName('ul')[0];

var treeLis = treeUl.getElementsByTagName('li');

for (var i = 0; i &lt; treeLis.length; i++) {
  var li = treeLis[i];

  var span = document.createElement('span');
  li.insertBefore(span, li.firstChild); // добавить пустой SPAN
  span.appendChild(span.nextSibling); // переместить в него заголовок
}</code></pre>
        </div>
      </div>
      
      </div><p>Теперь можно отслеживать клики <em>на заголовках</em>.</p>
<p>Так выглядит дерево с обёрнутыми в <code>SPAN</code> заголовками и делегированием:</p>
<div data-trusted="0" class="code-example" data-demo-height="190" data-autorun="true">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-markup"><code class="language-markup">&lt;style&gt;
  span {
    border: 1px solid red;
  }
&lt;/style&gt;

&lt;ul onclick=&quot;alert(event.target.tagName)&quot;&gt;
  &lt;li&gt;&lt;span&gt;Млекопетающие&lt;/span&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;Коровы&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;Ослы&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;Собаки&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;Тигры&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</code></pre>
        </div>
      </div>
      <div class="code-result code-example__result">
        <iframe
          class="code-result__iframe"
          name="code-result-6amqfl"
          style="height:190px"
          src="about:blank"></iframe>
      </div>
      </div><p>Так как <code>SPAN</code> – инлайновый элемент, он всегда такого же размера как текст. Да здравствует <code>SPAN</code>!</p>
<p>В реальной жизни дерево, скорее всего, будет сразу со <code>SPAN</code>: если HTML-код дерева генерируется на сервере, то это несложно, если дерево генерируется в JavaScript – тем более просто.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Итоговое решение</button><div class="task__answer-content"><h4 class="task__step-title">Итоговое решение</h4><p>Для делегирования нужно по клику понять, на каком узле он произошел.</p>
<p>В нашем случае у <code>SPAN</code> нет детей-элементов, поэтому не нужно подниматься вверх по цепочке родителей. Достаточно просто проверить <code>event.target.tagName == 'SPAN'</code>, чтобы понять, где был клик, и спрятать потомков.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var tree = document.getElementsByTagName('ul')[0];

tree.onclick = function(event) {
  var target = event.target;

  if (target.tagName != 'SPAN') {
    return; // клик был не на заголовке
  }

  var li = target.parentNode; // получить родительский LI

  // получить UL с потомками -- это первый UL внутри LI
  var childrenContainer = li.getElementsByTagName('ul')[0];

  if (!childrenContainer) return; // потомков нет -- ничего не надо делать

  // спрятать/показать (можно и через CSS-класс)
  childrenContainer.hidden = !childrenContainer.hidden;
}</code></pre>
        </div>
      </div>
      
      </div><p>Выделение узлов жирным при наведении делается при помощи CSS-селектора <code>:hover</code>.</p>
<p><a href="http://plnkr.co/edit/62Z7toAcJGiLk95mBtUQ?p=preview" target="_blank" data-plunk-id="62Z7toAcJGiLk95mBtUQ">Открыть решение в песочнице.</a></p></div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></main></div></div></div><div class="page-footer"><div class="page-footer__left"><ul class="page-footer__list"><li class="page-footer__item">©&nbsp;2007—2018&nbsp; Илья Кантор</li><li class="page-footer__item"><a href="../about#contact-us" class="page-footer__link">связаться с нами</a></li><li class="page-footer__item"><a href="../about" class="page-footer__link">о проекте</a></li><li class="page-footer__item"><a href="../agreement" class="page-footer__link">соглашение</a></li><li class="page-footer__item"><a href="http://slack.javascript.ru/" class="page-footer__slack">slack-чат</a></li></ul></div><div class="page-footer__right"><ul class="page-footer__list"><li class="page-footer__item">powered by <a rel="nofollow" href="http://nodejs.org/" class="page-footer__link">node.js</a>&nbsp;&amp;&nbsp;<a rel="nofollow" href="http://github.com/iliakan/javascript-tutorial-ru" class="page-footer__link">open source</a></li></ul></div></div></body></html>