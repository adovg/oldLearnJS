<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><div style="display:none" class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="../default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="../js.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Язык JavaScript</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-3" itemprop="child" class="breadcrumbs__item"><a href="../data-structures.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Структуры данных</span></a></li><li id="breadcrumb-3" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="../array-methods.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Массивы: методы</span></a></li></div><div itemscope itemtype="http://schema.org/TechArticle" class="task-single"><meta itemprop="name" content="Оставить уникальные элементы массива"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><a href="../array-methods.htm" class="task-single__back"><span>Вернуться к уроку</span></a><div itemprop="articleBody" class="task task-single__task"><div class="task__header"><div class="task__title-wrap"><h2 class="task__title">Оставить уникальные элементы массива</h2></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 3</span></div></div><div class="task__content"><p>Пусть <code>arr</code> – массив строк.</p>
<p>Напишите функцию <code>unique(arr)</code>, которая возвращает массив, содержащий только уникальные элементы <code>arr</code>.</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function unique(arr) {
  /* ваш код */
}

var strings = [&quot;кришна&quot;, &quot;кришна&quot;, &quot;харе&quot;, &quot;харе&quot;,
  &quot;харе&quot;, &quot;харе&quot;, &quot;кришна&quot;, &quot;кришна&quot;, &quot;8-()&quot;
];

alert( unique(strings) ); // кришна, харе, 8-()</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/QMnlU1GSUul4II7xJy6X?p=preview" target="_blank" data-plunk-id="QMnlU1GSUul4II7xJy6X">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__step"><button type="button" class="task__step-show">Решение перебором (медленное)</button><div class="task__answer-content"><h4 class="task__step-title">Решение перебором (медленное)</h4><p>Пройдём по массиву вложенным циклом.</p>
<p>Для каждого элемента мы будем искать, был ли такой уже. Если был – игнорировать:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function unique(arr) {
  var result = [];

  nextInput:
    for (var i = 0; i &lt; arr.length; i++) {
      var str = arr[i]; // для каждого элемента
      for (var j = 0; j &lt; result.length; j++) { // ищем, был ли он уже?
        if (result[j] == str) continue nextInput; // если да, то следующий
      }
      result.push(str);
    }

  return result;
}

var strings = [&quot;кришна&quot;, &quot;кришна&quot;, &quot;харе&quot;, &quot;харе&quot;,
  &quot;харе&quot;, &quot;харе&quot;, &quot;кришна&quot;, &quot;кришна&quot;, &quot;8-()&quot;
];

alert( unique(strings) ); // кришна, харе, 8-()</code></pre>
        </div>
      </div>
      
      </div><p>Давайте посмотрим, насколько быстро он будет работать.</p>
<p>Предположим, в массиве <code>100</code> элементов. Если все они одинаковые, то <code>result</code> будет состоять из одного элемента и вложенный цикл будет выполняться сразу. В этом случае всё хорошо.</p>
<p>А если все, или почти все элементы разные?</p>
<p>В этом случае для каждого элемента понадобится обойти весь текущий массив результатов, после чего – добавить в этот массив.</p>
<ol>
<li>Для первого элемента – это обойдётся в <code>0</code> операций доступа к элементам <code>result</code> (он пока пустой).</li>
<li>Для второго элемента – это обойдётся в <code>1</code> операцию доступа к элементам <code>result</code>.</li>
<li>Для третьего элемента – это обойдётся в <code>2</code> операции доступа к элементам <code>result</code>.</li>
<li>…Для n-го элемента – это обойдётся в <code>n-1</code> операций доступа к элементам <code>result</code>.</li>
</ol>
<p>Всего <code>0 + 1 + 2 + … + n-1 = (n-1)*n/2 = n<sup>2</sup>/2 – n/2</code> (как сумма арифметической прогрессии), то есть количество операций растёт примерно как квадрат от <code>n</code>.</p>
<p>Это очень быстрый рост. Для <code>100</code> элементов – <code>4950</code> операций, для <code>1000</code> – <code>499500</code> (по формуле выше).</p>
<p>Поэтому такое решение подойдёт только для небольших массивов. Вместо вложенного <code>for</code> можно использовать и <code>arr.indexOf</code>, ситуация от этого не поменяется, так как <code>indexOf</code> тоже ищет перебором.</p>
</div></div><div class="task__step"><button type="button" class="task__step-show">Решение с объектом (быстрое)</button><div class="task__answer-content"><h4 class="task__step-title">Решение с объектом (быстрое)</h4><p>Наилучшая техника для выбора уникальных строк – использование вспомогательного объекта <code>obj</code>. Ведь название свойства в объекте, с одной стороны – строка, а с другой – всегда уникально. Повторная запись в свойство с тем же именем перезапишет его.</p>
<p>Например, если <code>&quot;харе&quot;</code> попало в объект один раз (<code>obj[&quot;харе&quot;] = true</code>), то второе такое же присваивание ничего не изменит.</p>
<p>Решение ниже создаёт объект <code>obj = {}</code> и записывает в него все строки как имена свойств. А затем собирает свойства из объекта в массив через <code>Object.keys()</code>. Дубликатов уже не будет.</p>
<div data-trusted="1" class="code-example" data-highlight-block="5-5">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function unique(arr) {
  var obj = {};

  for (var i = 0; i &lt; arr.length; i++) {
    var str = arr[i];
    obj[str] = true; // запомнить строку в виде свойства объекта
  }

  return Object.keys(obj); // или собрать ключи перебором для IE8-
}

var strings = [&quot;кришна&quot;, &quot;кришна&quot;, &quot;харе&quot;, &quot;харе&quot;,
  &quot;харе&quot;, &quot;харе&quot;, &quot;кришна&quot;, &quot;кришна&quot;, &quot;8-()&quot;
];

alert( unique(strings) ); // кришна, харе, 8-()</code></pre>
        </div>
      </div>
      
      </div><p>Так что можно положить все значения как ключи в объект, а потом достать.</p>
<p><a href="http://plnkr.co/edit/yOFZHiNq7kjWVQN8wsnv?p=preview" target="_blank" data-plunk-id="yOFZHiNq7kjWVQN8wsnv">Открыть решение с тестами в песочнице.</a></p></div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></main></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>