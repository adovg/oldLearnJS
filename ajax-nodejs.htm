<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><header class="main__header"><div class="main__header-inner"><ol class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="ajax.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">AJAX и COMET</span></a></li></ol><h1 class="main__header-title">Node.JS для решения задач</h1></div></header><div class="content"><article itemscope itemtype="http://schema.org/TechArticle"><meta itemprop="name" content="Node.JS для решения задач"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><div itemprop="articleBody"><p>В этом разделе предлагаются задачи по теме AJAX.</p>
<p>Конечно же, они требуют взаимодействия с сервером. Мы будем использовать серверную часть, написанную на JavaScript, на <a href="http://nodejs.org/">Node.JS</a>.</p>
<p>Если вы не использовали Node.JS ранее – не беспокойтесь. Здесь нашей целью является преимущественно клиентская часть, поэтому прямо сейчас изучать Node.JS не обязательно. Серверные скрипты уже готовы. Нужно только поставить Node.JS и модули, чтобы их запускать.</p>
<h2><a class="main__anchor" name="установка" href="#установка">Установка</a></h2><p>Для настройки окружения будет достаточно сделать два шага:</p>
<ol>
<li>
<p>Сначала установите сам сервер Node.JS.</p>
<p>Если у вас Unix-система – рекомендуется собрать последнюю версию из исходников, а также NPM. Вы справитесь.</p>
<p>Если Windows – посетите сайт <a href="http://nodejs.org/">http://nodejs.org</a> или скачайте установщик (32 или 64-битный) с расширением <code>.msi</code> из <a href="http://nodejs.org/dist/latest/">http://nodejs.org/dist/latest/</a>.</p>
</li>
<li>
<p>Выберите директорию, в которой будете решать задачи. Запустите в ней:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-none"><code class="language-none">npm install node-static</code></pre>
        </div>
      </div>
      
      </div><p>Это установит в текущую директорию модуль <a href="https://github.com/cloudhead/node-static">node-static</a>, который станет автоматически доступным для скриптов из поддиректорий.</p>
<p><strong>Если у вас Windows и команда не сработала, то скорее всего дело в том, что «не подхватились» новые пути. Перезапустите ваш файловый менеджер или консоль.</strong></p>
</li>
</ol>
<h2><a class="main__anchor" name="проверка" href="#проверка">Проверка</a></h2><p>Проверьте инсталяцию.</p>
<p>Для этого:</p>
<ol>
<li>
<p>Создайте какую-нибудь поддиректорию и в ней файл <code>server.js</code> с таким содержимым:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var http = require('http');
var static = require('node-static');
var file = new static.Server('.');

http.createServer(function(req, res) {
  file.serve(req, res);
}).listen(8080);

console.log('Server running on port 8080');</code></pre>
        </div>
      </div>
      
      </div></li>
<li>
<p>Запустите его: <code>node server.js</code>.</p>
<p>Должно вывести:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-none"><code class="language-none">Server running on port 8080</code></pre>
        </div>
      </div>
      
      </div></li>
</ol>
<div class="important important_warn">
            <div class="important__header"><span class="important__type">Нельзя запустить больше одного сервера одновременно!</span></div>
            <div class="important__content"><p>При попытке запуска двух серверов (например, в разных консолях) – будет конфликт портов и ошибка.</p>
</div></div>
<ol start="3">
<li>
<p>Откройте в браузере <a href="http://127.0.0.1:8080/server.js">http://127.0.0.1:8080/server.js</a>.</p>
<p>Должно вывести код файла <code>server.js</code>.</p>
</li>
</ol>
<p>Если всё работает – отлично, теперь вы готовы решать задачи.</p>
<h2><a class="main__anchor" name="примеры" href="#примеры">Примеры</a></h2><p>В примерах, за редким исключением, для краткости будет приводиться не полный скрипт на Node.JS, а только код обработки запроса.</p>
<p>Например, вместо:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var http = require('http');
var url = require('url');
var querystring = require('querystring');

function accept(req, res) {

  res.writeHead(200, {
    'Content-Type': 'text/plain',
    'Cache-Control': 'no-cache'
  });

  res.end(&quot;OK&quot;);
}

http.createServer(accept).listen(8080);</code></pre>
        </div>
      </div>
      
      </div><p>…Будет только функция <code>accept</code>, или даже только её содержимое:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">res.writeHead(200, {
  'Content-Type': 'text/plain',
  'Cache-Control': 'no-cache'
});</code></pre>
        </div>
      </div>
      
      </div><h2><a class="main__anchor" name="основные-методы" href="#основные-методы">Основные методы</a></h2><p>В функции <code>accept</code> используются два объекта:</p>
<ul>
<li><code>req</code> – объект запроса («request»), то есть то, что прислал клиент (обычно браузер), из него читаем данные.</li>
<li><code>res</code> – объект ответа («response»), в него пишем данные в ответ клиенту.
<ul>
<li>вызов <code>res.writeHead(HTTP-код, [строка статуса], {заголовки})</code> пишет заголовки.</li>
<li>вызов <code>res.write(txt)</code> пишет текст в ответ.</li>
<li>вызов <code>res.end(txt)</code> – завершает запрос ответом.</li>
</ul>
</li>
</ul>
<h2><a class="main__anchor" name="демо" href="#демо">Демо</a></h2><p>Кроме просмотра кода, можно будет попробовать и скачать различные демки.</p>
<p>Вот пример демо, можете попробовать нажать на кнопку – она работает.</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"><div class="toolbar__tool">
        <a href="http://learn.javascript.ru/tutorial/zipview/example.zip?plunkId=SlaWzDdPQTTzsMO3QeQT" target="_blank" title="скачать архив" class="toolbar__button toolbar__button_download"></a>
      </div>
      </div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:80px" src="article/ajax-nodejs/example/default.htm"></iframe>
  </div><p>Если хотите посмотреть пример поближе и поиграть с ним – скачайте архив (кнопка справа-сверху в примере выше), он будет работать и на вашем Node.JS.</p>
<h2><a class="main__anchor" name="больше-о-node-js" href="#больше-о-node-js">Больше о Node.JS</a></h2><p>Больше о сервере Node.JS можно узнать в <a href="screencast/nodejs.htm">скринкасте по Node.JS</a>.</p>
</div></article></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>