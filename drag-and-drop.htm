<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><header class="main__header"><div class="main__header-inner"><ol class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="ui.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Документ, события, интерфейсы</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="event-details.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">События в деталях</span></a></li></ol><h1 class="main__header-title">Мышь: Drag'n'Drop</h1></div></header><div class="content"><article itemscope itemtype="http://schema.org/TechArticle"><meta itemprop="name" content="Мышь: Drag'n'Drop"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><div itemprop="articleBody"><p>Drag’n’Drop – это возможность захватить мышью элемент и перенести его. В свое время это было замечательным открытием в области интерфейсов, которое позволило упростить большое количество операций.</p>
<p>Перенос мышкой может заменить целую последовательность кликов. И, самое главное, он упрощает внешний вид интерфейса: функции, реализуемые через Drag’n’Drop, в ином случае потребовали бы дополнительных полей, виджетов и т.п.</p>
<h2><a class="main__anchor" name="отличия-от-html5-drag-n-drop" href="#отличия-от-html5-drag-n-drop">Отличия от HTML5 Drag’n’Drop</a></h2><p>В современном стандарте HTML5 есть поддержка Drag’n’Drop при помощи <a href="http://www.html5rocks.com/en/tutorials/dnd/basics/">специальных событий</a>.</p>
<p>Эти события поддерживаются всеми современными браузерами, и у них есть свои интересные особенности, например, можно перетащить файл в браузер, так что JS получит доступ к его содержимому. Они заслуживают отдельного рассмотрения.</p>
<p>Но в плане именно Drag’n’Drop у них есть существенные ограничения. Например, нельзя организовать перенос «только по горизонтали» или «только по вертикали». Также нельзя ограничить перенос внутри заданной зоны. Есть и другие интерфейсные задачи, которые такими встроенными событиями нереализуемы.</p>
<p>Поэтому здесь мы будем рассматривать Drag’n’Drop при помощи событий мыши.</p>
<p>Рассматриваемые приёмы, вообще говоря, применяются не только в Drag’n’Drop, но и для любых интерфейсных взаимодействий вида «захватить – потянуть – отпустить».</p>
<h2><a class="main__anchor" name="алгоритм-drag-n-drop" href="#алгоритм-drag-n-drop">Алгоритм Drag’n’Drop</a></h2><p>Основной алгоритм Drag’n’Drop выглядит так:</p>
<ol>
<li>Отслеживаем нажатие кнопки мыши на переносимом элементе при помощи события <code>mousedown</code>.</li>
<li>При нажатии – подготовить элемент к перемещению.</li>
<li>Далее отслеживаем движение мыши через <code>mousemove</code> и передвигаем переносимый элемент на новые координаты путём смены <code>left/top</code> и <code>position:absolute</code>.</li>
<li>При отпускании кнопки мыши, то есть наступлении события <code>mouseup</code> – остановить перенос элемента и произвести все действия, связанные с окончанием Drag’n’Drop.</li>
</ol>
<p>В следующем примере эти шаги реализованы для переноса мяча:</p>
<div data-trusted="1" class="code-example" data-highlight-block="2-2,5-5,20-20,25-25">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var ball = document.getElementById('ball');

ball.onmousedown = function(e) { // 1. отследить нажатие

  // подготовить к перемещению
  // 2. разместить на том же месте, но в абсолютных координатах
  ball.style.position = 'absolute';
  moveAt(e);
  // переместим в body, чтобы мяч был точно не внутри position:relative
  document.body.appendChild(ball);

  ball.style.zIndex = 1000; // показывать мяч над другими элементами

  // передвинуть мяч под координаты курсора
  // и сдвинуть на половину ширины/высоты для центрирования
  function moveAt(e) {
    ball.style.left = e.pageX - ball.offsetWidth / 2 + 'px';
    ball.style.top = e.pageY - ball.offsetHeight / 2 + 'px';
  }

  // 3, перемещать по экрану
  document.onmousemove = function(e) {
    moveAt(e);
  }

  // 4. отследить окончание переноса
  ball.onmouseup = function() {
    document.onmousemove = null;
    ball.onmouseup = null;
  }
}</code></pre>
        </div>
      </div>
      
      </div><p>Если запустить этот код, то мы заметим нечто странное. При начале переноса мяч «раздваивается» и переносится не сам мяч, а его «клон».</p>
<p>Это можно увидеть в действии внутри ифрейма:</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:230px" src="https://js.cx/article/drag-and-drop/ball/"></iframe>
  </div><p>Попробуйте перенести мяч мышкой и вы увидите описанное, довольно-таки странное, поведение.</p>
<p>Это потому, что браузер имеет свой собственный Drag’n’Drop, который автоматически запускается и вступает в конфликт с нашим. Это происходит именно для картинок и некоторых других элементов.</p>
<p>Его нужно отключить:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">ball.ondragstart = function() {
  return false;
};</code></pre>
        </div>
      </div>
      
      </div><p>Теперь всё будет в порядке.</p>
<p>В действии (внутри ифрейма):</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:230px" src="https://js.cx/article/drag-and-drop/ball2/"></iframe>
  </div><p>Ещё одна особенность правильного Drag’n’Drop – событие <code>mousemove</code> отслеживается на <code>document</code>, а не на <code>ball</code>.</p>
<p>С первого взгляда кажется, что мышь всегда над мячом и обработчик <code>mousemove</code> можно повесить на сам мяч, а не на документ.</p>
<p>Однако, на самом деле мышь во время переноса не всегда над мячом.</p>
<p>Вспомним, событие <code>mousemove</code> возникает хоть и часто, но не для каждого пикселя. Быстрое движение курсора вызовет <code>mousemove</code> уже не над мячом, а, например, в дальнем конце страницы.</p>
<p>Вот почему мы должны отслеживать <code>mousemove</code> на всём <code>document</code>.</p>
<h2><a class="main__anchor" name="правильное-позиционирование" href="#правильное-позиционирование">Правильное позиционирование</a></h2><p>В примерах выше мяч позиционируется в центре под курсором мыши:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">self.style.left = e.pageX - ball.offsetWidth / 2 + 'px';
self.style.top = e.pageY - ball.offsetHeight / 2 + 'px';</code></pre>
        </div>
      </div>
      
      </div><p>Если поставить <code>left/top</code> ровно в <code>pageX/pageY</code>, то мячик прилипнет верхним-левым углом к курсору мыши. Будет некрасиво. Поэтому мы сдвигаем его на половину высоты/ширины, чтобы был центром под мышью. Уже лучше.</p>
<p>Но не идеально. В частности, в самом начале переноса, особенно если мячик «взят» за край – он резко «прыгает» центром под курсор мыши.</p>
<p><strong>Для правильного переноса необходимо, чтобы изначальный сдвиг курсора относительно элемента сохранялся.</strong></p>
<p>Где захватили, за ту «часть элемента» и переносим:</p>
<figure><div class="image" style="width:156px">
      <div class="image__ratio" style="padding-top:83.97435897435898%"></div>
      <img src="article/drag-and-drop/ball_shift.png" alt="" width="156" height="131" class="image__image">
      </div></figure><ol>
<li>
<p>Когда человек нажимает на мячик <code>mousedown</code> – курсор сдвинут относительно левого-верхнего угла мяча на расстояние, которое мы обозначим <code>shiftX/shiftY</code>. И нужно при переносе сохранить этот сдвиг.</p>
<p>Получить значения <code>shiftX/shiftY</code> легко: достаточно вычесть из координат курсора <code>pageX/pageY</code> левую-верхнюю границу мячика, полученную при помощи функции <a href="coordinates-document.htm#getCoords">getCoords</a>.</p>
<p><strong>При Drag’n’Drop мы везде используем координаты относительно документа, так как они подходят в большем количестве ситуаций.</strong></p>
<p>Конечно же, не проблема перейти к координатам относительно окна, если это понадобится. Достаточно использовать <code>position:fixed</code>, <code>elem.getBoundingClientRect()</code> для определения координат и <code>e.clientX/Y</code>.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">// onmousedown
shiftX = e.pageX - getCoords(ball).left;
shiftY = e.pageY - getCoords(ball).top;</code></pre>
        </div>
      </div>
      
      </div></li>
<li>
<p>Далее при переносе мяча мы располагаем его <code>left/top</code> с учетом сдвига, то есть вот так:</p>
<div data-trusted="1" class="code-example" data-highlight-inline="1:28-34,2:27-33">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">// onmousemove
ball.style.left = e.pageX - shiftX + 'px';
ball.style.top = e.pageY - shiftY + 'px';</code></pre>
        </div>
      </div>
      
      </div></li>
</ol>
<p>Итоговый код с правильным позиционированием:</p>
<div data-trusted="1" class="code-example" data-highlight-block="5-6" data-highlight-inline="15:32-38,16:31-37">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var ball = document.getElementById('ball');

ball.onmousedown = function(e) {

  var coords = getCoords(ball);
  var shiftX = e.pageX - coords.left;
  var shiftY = e.pageY - coords.top;

  ball.style.position = 'absolute';
  document.body.appendChild(ball);
  moveAt(e);

  ball.style.zIndex = 1000; // над другими элементами

  function moveAt(e) {
    ball.style.left = e.pageX - shiftX + 'px';
    ball.style.top = e.pageY - shiftY + 'px';
  }

  document.onmousemove = function(e) {
    moveAt(e);
  };

  ball.onmouseup = function() {
    document.onmousemove = null;
    ball.onmouseup = null;
  };

}

ball.ondragstart = function() {
  return false;
};

function getCoords(elem) {   // кроме IE8-
  var box = elem.getBoundingClientRect();
  return {
    top: box.top + pageYOffset,
    left: box.left + pageXOffset
  };
}

}</code></pre>
        </div>
      </div>
      
      </div><p>В действии (внутри ифрейма):</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:230px" src="https://js.cx/article/drag-and-drop/ball3/"></iframe>
  </div><p>Различие особенно заметно, если захватить мяч за правый-нижний угол. В предыдущем примере мячик «прыгнет» серединой под курсор, в этом – будет плавно переноситься с текущей позиции.</p>
<h2><a class="main__anchor" name="итого" href="#итого">Итого</a></h2><p>Мы рассмотрели «минимальный каркас» <code>Drag'n'Drop</code>.</p>
<p>Его компоненты:</p>
<ol>
<li>События <code>ball.mousedown</code> → <code>document.mousemove</code> → <code>ball.mouseup</code>.</li>
<li>Передвижение с учётом изначального сдвига <code>shiftX/shiftY</code>.</li>
<li>Отмена действия браузера по событию <code>dragstart</code>.</li>
</ol>
<p>На этой основе можно сделать очень многое.</p>
<ul>
<li>При <code>mouseup</code> можно обработать окончание переноса, произвести изменения в данных, если они нужны.</li>
<li>Во время самого переноса можно подсвечивать элементы, над которыми проходит элемент.</li>
<li>При обработке событий <code>mousedown</code> и <code>mouseup</code> можно использовать делегирование, так что одного обработчика достаточно для управления переносом в зоне с сотнями элементов.</li>
</ul>
<p>Это и многое другое мы рассмотрим в статье про <a href="drag-and-drop-objects.htm">Drag’n’Drop объектов</a>.</p>
</div></article><div class="tasks"><h2 id="tasks" class="tasks__title"><a href="#tasks" class="main__anchor main__anchor_noicon tasks__title-anchor">Задачи</a></h2><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#слайдер" name="слайдер" class="main__anchor">Слайдер</a></h3><a href="task/slider.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Создайте слайдер:</p>
<div class="code-result">
    <div class="code-result__toolbar toolbar"></div>
    <iframe class="code-result__iframe" data-trusted="1" style="height:60px" src="https://js.cx/task/slider/solution/"></iframe>
  </div><p>Захватите мышкой синий бегунок и двигайте его, чтобы увидеть в работе.</p>
<p>Важно:</p>
<ul>
<li>Слайдер должен нормально работать при резком движении мыши влево или вправо, за пределы полосы. При этом бегунок должен останавливаться четко в нужном конце полосы.</li>
<li>При нажатом бегунке мышь может выходить за пределы полосы слайдера, но слайдер пусть все равно работает (это удобно для пользователя).</li>
</ul>
<p><a href="http://plnkr.co/edit/dAPu52I52H3jV9aUGQhy?p=preview" target="_blank" data-plunk-id="dAPu52I52H3jV9aUGQhy">Открыть песочницу для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Как можно видеть из HTML/CSS, слайдер – это <code>DIV</code>, подкрашенный фоном/градиентом, внутри которого находится другой <code>DIV</code>, оформленный как бегунок, с <code>position:relative</code>.</p>
<p>Бегунок немного поднят, и вылезает по высоте из родителя.</p>
<p>На этой основе мы реализуем горизонтальный Drag’n’Drop, ограниченный по ширине. Его особенность – в <code>position:relative</code> у переносимого элемента, т.е. координата ставится не абсолютная, а относительно родителя.</p>
<p><a href="http://plnkr.co/edit/qwrhqAarRXyJCEeqCJGl?p=preview" target="_blank" data-plunk-id="qwrhqAarRXyJCEeqCJGl">Открыть решение в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#расставить-супергероев-по-полю" name="расставить-супергероев-по-полю" class="main__anchor">Расставить супергероев по полю</a></h3><a href="task/drag-heroes.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>В этой задаче вы можете проверить своё понимание сразу нескольких аспектов Drag’n’Drop.</p>
<p>Сделайте так, чтобы элементы с классом <code>draggable</code> можно было переносить мышкой. По окончании переноса элемент остаётся на том месте в документе, где его положили.</p>
<p>Требования к реализации:</p>
<ul>
<li>Должен быть 1 обработчик на <code>document</code>, использующий делегирование.</li>
<li>Если элементы подносят к вертикальным краям окна – оно должно прокручиваться вниз/вверх.</li>
<li>Горизонтальной прокрутки в этой задаче не существует.</li>
<li>Элемент при переносе, даже при резких движениях мышкой, не должен попасть вне окна.</li>
</ul>
<p>Футбольное поле в этой задаче слишком большое, чтобы показывать его здесь, поэтому откройте его, кликнув по ссылке ниже. Там же и подробное описание задачи (осторожно, винни-пух и супергерои!).</p>
<p><a href="https://js.cx/task/drag-heroes/solution/" target="blank">Демо в новом окне</a></p><p><a href="http://plnkr.co/edit/oNrJ8rcb529X3Bc5HdvW?p=preview" target="_blank" data-plunk-id="oNrJ8rcb529X3Bc5HdvW">Открыть песочницу для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>В решении этой задачи для переноса мы используем координаты относительно окна и <code>position:fixed</code>. Так проще.</p>
<p>А по окончании – прибавляем прокрутку и делаем <code>position:absolute</code>, чтобы элемент был привязан к определённому месту в документе, а не в окне. Можно было и сразу <code>position:absolute</code> и оперировать в абсолютных координатах, но код был бы немного длиннее.</p>
<p>Детали решения расписаны в комментариях в исходном коде.</p>
<p><a href="http://plnkr.co/edit/Ug9iqb7sLEAqyD77bjPr?p=preview" target="_blank" data-plunk-id="Ug9iqb7sLEAqyD77bjPr">Открыть решение в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>