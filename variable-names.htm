<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><header class="main__header"><div class="main__header-inner"><ol class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="js.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Язык JavaScript</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="first-steps.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Основы JavaScript</span></a></li></ol><h1 class="main__header-title">Правильный выбор имени переменной</h1></div></header><div class="content"><article itemscope itemtype="http://schema.org/TechArticle"><meta itemprop="name" content="Правильный выбор имени переменной"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><div itemprop="articleBody"><p>Правильный выбор имени переменной – одна из самых важных и сложных вещей в программировании, которая отличает начинающего от гуру.</p>
<p>Дело в том, что большую часть времени мы тратим не на изначальное написание кода, а на его развитие.</p>
<p>Возможно, эти слова не очевидны, если вы пока что ничего большого не писали или пишете код «только для записи» (write-only, написал 5 строк, отдал заказчику и забыл). Но чем более серьёзные проекты вы будете делать, тем более актуальны они будут для вас.</p>
<p>Что такое это «развитие»? Это когда я вчера написал код, а сегодня (или спустя неделю) прихожу и хочу его поменять. Например, вывести сообщение не так, а эдак… Обработать товары по-другому, добавить функциональность… А где у меня там сообщение хранится? А где товар?..</p>
<p>Гораздо проще найти нужные данные, если они правильно помечены, то есть когда переменная названа <em>правильно</em>.</p>
<h2><a class="main__anchor" name="правила-именования" href="#правила-именования">Правила именования</a></h2><ul>
<li>
<p><strong>Правило 1.</strong></p>
<p><strong>Никакого транслита. Только английский.</strong></p>
<p>Неприемлемы:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var moiTovari;
var cena;
var ssilka;</code></pre>
        </div>
      </div>
      
      </div><p>Подойдут:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var myGoods;
var price;
var link;</code></pre>
        </div>
      </div>
      
      </div><p>Чем плох транслит?</p>
<p>Во-первых, среди разработчиков всего мира принято использовать английский язык для имён переменных. И если ваш код потом попадёт к кому-то другому, например вы будете в команде больше чем из одного человека, то велик шанс, что транслит ему не понравится.</p>
<p>Во-вторых, русский транслит хуже читается и длиннее, чем названия на английском.</p>
<p>В-третьих, в проектах вы наверняка будете применять библиотеки, написанные другими людьми. Многое уже готово, в распоряжении современного разработчика есть масса инструментов, все они используют названия переменных и функций на английском языке, и вы, конечно, будете их использовать. А от кода, где транслит перемешан с английским – волосы могут встать дыбом, и не только на голове.</p>
<p>Если вы, вдруг, не знаете английский – самое время выучить.</p>
</li>
<li>
<p><strong>Правило 2.</strong></p>
<p><strong>Использовать короткие имена только для переменных «местного значения».</strong></p>
<p>Называть переменные именами, не несущими смысловой нагрузки, например  <code>a</code>, <code>e</code>, <code>p</code>, <code>mg</code> – можно только в том случае, если они используются в небольшом фрагменте кода и их применение очевидно.</p>
<p>Вообще же, название переменной должно быть понятным. Иногда для этого нужно использовать несколько слов.</p>
</li>
<li>
<p><strong>Правило 3.</strong></p>
<p><strong>Переменные из нескольких слов пишутся <code>вместеВотТак</code>.</strong></p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var borderLeftWidth;</code></pre>
        </div>
      </div>
      
      </div><p>Этот способ записи называется «верблюжьей нотацией» или, по-английски, «camelCase».</p>
<p>Существует альтернативный стандарт, когда несколько слов пишутся через знак подчеркивания <code>'_'</code>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var border_left_width;</code></pre>
        </div>
      </div>
      
      </div><p>Преимущественно в JavaScript используется вариант <code>borderLeftWidth</code>, в частности во встроенных языковых и браузерных функциях. Поэтому целесообразно остановиться на нём.</p>
<p>Ещё одна причина выбрать «верблюжью нотацию» – запись в ней немного короче, чем с подчеркиванием, т.к. не нужно вставлять <code>'_'</code>.</p>
</li>
<li>
<p><strong>Правило последнее, главное.</strong></p>
<p><strong>Имя переменной должно максимально чётко соответствовать хранимым в ней данным.</strong></p>
<p>Придумывание таких имен – одновременно коротких и точных, при которых всегда понятно, что где лежит, приходит с опытом, но только если сознательно стремиться к этому.</p>
</li>
</ul>
<p>Позвольте поделиться одним небольшим секретом, который очень прост, но позволит улучшить названия переменных и сэкономит время.</p>
<p>Бывает так, что, написав код, мы через некоторое время к нему возвращаемся, надо что-то поправить. И мы примерно помним, что переменная, в которой хранится нужное вам значение, называется… Ну, скажем,  <code>borderLeftWidth</code>. Мы ищем её в коде, не находим, но, разобравшись, обнаруживаем, что на самом деле переменная называлась вот так: <code>leftBorderWidth</code>.</p>
<p><strong>Если мы ищем переменную с одним именем, а находим  – с другим, то зачастую самый лучший ход – это <em>переименовать</em> переменную, чтобы имя было тем, которое вы искали.</strong></p>
<p>То есть, в коде <code>leftBorderWidth</code>, а мы её переименуем на ту, которую искали: <code>borderLeftWidth</code>.</p>
<p>Зачем? Дело в том, что в следующий раз, когда вы захотите что-то поправить, то вы будете искать по тому же самому имени. Соответственно, это сэкономит вам время.</p>
<p>Есть причина и поважнее. Поскольку именно это имя переменной пришло в голову – скорее всего, оно больше соответствует хранимым там данным, чем то, которое мы придумали изначально. Исключения бывают, но в любом случае – такое несовпадение – это повод задуматься.</p>
<p>Чтобы удобно переименовывать переменную, нужно использовать <a href="editor.htm">хороший редактор JavaScript</a>, тогда этот процесс будет очень простым и быстрым.</p>
<div class="important important_smart">
            <div class="important__header"><span class="important__type">Если коротко…</span></div>
            <div class="important__content"><p>Смысл имени переменной – это «имя на коробке», по которому мы сможем максимально быстро находить нужные нам данные.</p>
<p><strong>Не нужно бояться переименовывать переменные, если вы придумали имя получше.</strong></p>
<p>Современные редакторы позволяют делать это очень удобно и быстро. Это в конечном счете сэкономит вам время.</p>
</div></div>
<div class="important important_warn">
            <div class="important__header"><span class="important__type">Храните в переменной то, что следует</span></div>
            <div class="important__content"><p>Бывают ленивые программисты, которые, вместо того чтобы объявить новую переменную, используют существующую.</p>
<p>В результате получается, что такая переменная – как коробка, в которую кидают то одно, то другое, то третье, при этом не меняя название. Что в ней лежит сейчас? А кто его знает… Нужно подойти, проверить.</p>
<p>Сэкономит такой программист время на объявлении переменной – потеряет в два раза больше на отладке кода.</p>
<p><strong>&quot;Лишняя&quot; переменная – добро, а не зло.</strong></p>
</div></div>
</div></article><div class="tasks"><h2 id="tasks" class="tasks__title"><a href="#tasks" class="main__anchor main__anchor_noicon tasks__title-anchor">Задачи</a></h2><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#объявление-переменных" name="объявление-переменных" class="main__anchor">Объявление переменных</a></h3><a href="task/declare-variables.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 3</span></div><div class="task__content"><ol>
<li>Создайте переменную для названия нашей планеты и присвойте ей значение <code>&quot;Земля&quot;</code>. <em>Правильное</em> имя выберите сами.</li>
<li>Создайте переменную для имени посетителя со значением <code>&quot;Петя&quot;</code>. Имя также на ваш вкус.</li>
</ol>
<button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Каждая строчка решения соответствует одному шагу задачи:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var ourPlanetName = &quot;Земля&quot;; // буквально &quot;название нашей планеты&quot;

var userName = &quot;Петя&quot;; // &quot;имя посетителя&quot;</code></pre>
        </div>
      </div>
      
      </div><p>Названия переменных можно бы сократить, например, до <code>planet</code> и <code>name</code>, но тогда станет менее понятно, о чем речь.</p>
<p>Насколько допустимы такие сокращения – зависит от скрипта, его размера и сложности, от того, есть ли другие планеты и пользователи. В общем, лучше не жалеть букв и называть переменные так, чтобы по имени можно было легко понять, что в ней находится, и нельзя было перепутать переменные.</p>
</div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>