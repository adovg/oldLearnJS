<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><header class="main__header"><div class="main__header-inner"><ol class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="js.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Язык JavaScript</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="data-structures.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Структуры данных</span></a></li></ol><h1 class="main__header-title">Дата и Время</h1></div></header><div class="content"><article itemscope itemtype="http://schema.org/TechArticle"><meta itemprop="name" content="Дата и Время"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><div itemprop="articleBody"><p>Для работы с датой и временем в JavaScript используются объекты <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/">Date</a>.</p>
<h2><a class="main__anchor" name="создание" href="#создание">Создание</a></h2><p>Для создания нового объекта типа <code>Date</code> используется один из синтаксисов:</p>
<dl>
<dt><code>new Date()</code></dt>
<dd>
<p>Создает объект <code>Date</code> с текущей датой и временем:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var now = new Date();
alert( now );</code></pre>
        </div>
      </div>
      
      </div></dd>
<dt><code>new Date(milliseconds)</code></dt>
<dd>
<p>Создает объект <code>Date</code>, значение которого равно количеству миллисекунд (1/1000 секунды), прошедших с 1 января 1970 года GMT+0.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">// 24 часа после 01.01.1970 GMT+0
var Jan02_1970 = new Date(3600 * 24 * 1000);
alert( Jan02_1970 );</code></pre>
        </div>
      </div>
      
      </div></dd>
<dt><code>new Date(datestring)</code></dt>
<dd>
<p>Если единственный аргумент – строка, используется вызов <code>Date.parse</code> (см. далее) для чтения даты из неё.</p>
</dd>
<dt><code>new Date(year, month, date, hours, minutes, seconds, ms)</code></dt>
<dd>
<p>Дату можно создать, используя компоненты в местной временной зоне. Для этого формата обязательны только первые два аргумента. Отсутствующие параметры, начиная с <code>hours</code> считаются равными нулю, а <code>date</code> – единице.</p>
<p>Заметим:</p>
</dd>
</dl>
<ul>
<li>
<p>Год <code>year</code> должен быть из 4 цифр.</p>
</li>
<li>
<p>Отсчет месяцев <code>month</code> начинается с нуля 0.</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">new Date(2011, 0, 1, 0, 0, 0, 0); // // 1 января 2011, 00:00:00
new Date(2011, 0, 1); // то же самое, часы/секунды по умолчанию равны 0</code></pre>
        </div>
      </div>
      
      </div><p>Дата задана с точностью до миллисекунд:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var date = new Date(2011, 0, 1, 2, 3, 4, 567);
alert( date ); // 1.01.2011, 02:03:04.567</code></pre>
        </div>
      </div>
      
      </div></li>
</ul>
<h2><a class="main__anchor" name="получение-компонентов-даты" href="#получение-компонентов-даты">Получение компонентов даты</a></h2><p>Для доступа к компонентам даты-времени объекта <code>Date</code> используются следующие методы:</p>
<dl>
<dt><code>getFullYear()</code></dt>
<dd>Получить год (из 4 цифр)</dd>
<dt><code>getMonth()</code></dt>
<dd>Получить месяц, <strong>от 0 до 11</strong>.</dd>
<dt><code>getDate()</code></dt>
<dd>Получить число месяца, от 1 до 31.</dd>
<dt><code>getHours(), getMinutes(), getSeconds(), getMilliseconds()</code></dt>
<dd>Получить соответствующие компоненты.</dd>
</dl>
<div class="important important_warn">
            <div class="important__header"><span class="important__type">Не <code>getYear()</code>, а <code>getFullYear()</code></span></div>
            <div class="important__content"><p>Некоторые браузеры реализуют нестандартный метод <code>getYear()</code>. Где-то он возвращает только две цифры из года, где-то четыре. Так или иначе, этот метод отсутствует в стандарте JavaScript. Не используйте его. Для получения года есть <code>getFullYear()</code>.</p>
</div></div>
<p>Дополнительно можно получить день недели:</p>
<dl>
<dt><code>getDay()</code></dt>
<dd>Получить номер дня в неделе. Неделя в JavaScript начинается с воскресенья, так что результат будет числом <strong>от 0(воскресенье) до 6(суббота)</strong>.</dd>
</dl>
<p><strong>Все методы, указанные выше, возвращают результат для местной временной зоны.</strong></p>
<p>Существуют также UTC-варианты этих методов, возвращающие день, месяц, год и т.п. для зоны GMT+0 (UTC): <code>getUTCFullYear()</code>, <code>getUTCMonth()</code>, <code>getUTCDay()</code>. То есть, сразу после <code>&quot;get&quot;</code> вставляется <code>&quot;UTC&quot;</code>.</p>
<p>Если ваше локальное время сдвинуто относительно UTC, то следующий код покажет разные часы:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">// текущая дата
var date = new Date();

// час в текущей временной зоне
alert( date.getHours() );

// сколько сейчас времени в Лондоне?
// час в зоне GMT+0
alert( date.getUTCHours() );</code></pre>
        </div>
      </div>
      
      </div><p>Кроме описанных выше, существуют два специальных метода без UTC-варианта:</p>
<dl>
<dt><code>getTime()</code></dt>
<dd>
<p>Возвращает число миллисекунд, прошедших с 1 января 1970 года GMT+0, то есть того же вида, который используется в конструкторе <code>new Date(milliseconds)</code>.</p>
</dd>
<dt><code>getTimezoneOffset()</code></dt>
<dd>
<p>Возвращает разницу между местным и UTC-временем, в минутах.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">alert( new Date().getTimezoneOffset() ); // Для GMT-1 выведет 60</code></pre>
        </div>
      </div>
      
      </div></dd>
</dl>
<h2><a class="main__anchor" name="установка-компонентов-даты" href="#установка-компонентов-даты">Установка компонентов даты</a></h2><p>Следующие методы позволяют устанавливать компоненты даты и времени:</p>
<ul>
<li><code>setFullYear(year [, month, date])</code></li>
<li><code>setMonth(month [, date])</code></li>
<li><code>setDate(date)</code></li>
<li><code>setHours(hour [, min, sec, ms])</code></li>
<li><code>setMinutes(min [, sec, ms])</code></li>
<li><code>setSeconds(sec [, ms])</code></li>
<li><code>setMilliseconds(ms)</code></li>
<li><code>setTime(milliseconds)</code> (устанавливает всю дату по миллисекундам с 01.01.1970 UTC)</li>
</ul>
<p>Все они, кроме <code>setTime()</code>, обладают также UTC-вариантом, например: <code>setUTCHours()</code>.</p>
<p>Как видно, некоторые методы могут устанавливать несколько компонентов даты одновременно, в частности, <code>setHours</code>. При этом если какая-то компонента не указана, она не меняется. Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var today = new Date;

today.setHours(0);
alert( today ); // сегодня, но час изменён на 0

today.setHours(0, 0, 0, 0);
alert( today ); // сегодня, ровно 00:00:00.</code></pre>
        </div>
      </div>
      
      </div><h3><a class="main__anchor" name="автоисправление-даты" href="#автоисправление-даты">Автоисправление даты</a></h3><p><em>Автоисправление</em> – очень удобное свойство объектов <code>Date</code>. Оно заключается в том, что можно устанавливать заведомо некорректные компоненты (например 32 января), а объект сам себя поправит.</p>
<div data-trusted="1" class="code-example" data-highlight-inline="0:26-28">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date(2013, 0, 32); // 32 января 2013 ?!?
alert(d); // ... это 1 февраля 2013!</code></pre>
        </div>
      </div>
      
      </div><p><strong>Неправильные компоненты даты автоматически распределяются по остальным.</strong></p>
<p>Например, нужно увеличить на 2 дня дату «28 февраля 2011». Может быть так, что это будет 2 марта, а может быть и 1 марта, если год високосный. Но нам обо всем этом думать не нужно. Просто прибавляем два дня. Остальное сделает <code>Date</code>:</p>
<div data-trusted="1" class="code-example" data-highlight-block="1-1">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date(2011, 1, 28);
d.setDate(d.getDate() + 2);

alert( d ); // 2 марта, 2011</code></pre>
        </div>
      </div>
      
      </div><p>Также это используют для получения даты, отдаленной от имеющейся на нужный промежуток времени. Например, получим дату на 70 секунд большую текущей:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date();
d.setSeconds(d.getSeconds() + 70);

alert( d ); // выведет корректную дату</code></pre>
        </div>
      </div>
      
      </div><p>Можно установить и нулевые, и даже отрицательные компоненты. Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date;

d.setDate(1); // поставить первое число месяца
alert( d );

d.setDate(0); // нулевого числа нет, будет последнее число предыдущего месяца
alert( d );</code></pre>
        </div>
      </div>
      
      </div><div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date;

d.setDate(-1); // предпоследнее число предыдущего месяца
alert( d );</code></pre>
        </div>
      </div>
      
      </div><h3><a class="main__anchor" name="преобразование-к-числу-разность-дат" href="#преобразование-к-числу-разность-дат">Преобразование к числу, разность дат</a></h3><p>Когда объект <code>Date</code> используется в числовом контексте, он преобразуется в количество миллисекунд:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">alert(+new Date) // +date то же самое, что: +date.valueOf()</code></pre>
        </div>
      </div>
      
      </div><p><strong>Важный побочный эффект: даты можно вычитать, результат вычитания объектов <code>Date</code> – их временная разница, в миллисекундах</strong>.</p>
<p>Это используют для измерения времени:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var start = new Date; // засекли время

// что-то сделать
for (var i = 0; i &lt; 100000; i++) {
  var doSomething = i * i * i;
}

var end = new Date; // конец измерения

alert( &quot;Цикл занял &quot; + (end - start) + &quot; ms&quot; );</code></pre>
        </div>
      </div>
      
      </div><h3><a class="main__anchor" name="бенчмаркинг" href="#бенчмаркинг">Бенчмаркинг</a></h3><p>Допустим, у нас есть несколько вариантов решения задачи, каждый описан функцией.</p>
<p>Как узнать, какой быстрее?</p>
<p>Для примера возьмем две функции, которые бегают по массиву:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function walkIn(arr) {
  for (var key in arr) arr[key]++
}

function walkLength(arr) {
  for (var i = 0; i &lt; arr.length; i++) arr[i]++;
}</code></pre>
        </div>
      </div>
      
      </div><p>Чтобы померять, какая из них быстрее, нельзя запустить один раз <code>walkIn</code>, один раз <code>walkLength</code> и замерить разницу. Одноразовый запуск ненадежен, любая мини-помеха исказит результат.</p>
<p>Для правильного бенчмаркинга функция запускается много раз, чтобы сам тест занял существенное время. Это сведет влияние помех к минимуму. Сложную функцию можно запускать 100 раз, простую – 1000 раз…</p>
<p>Померяем, какая из функций быстрее:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var arr = [];
for (var i = 0; i &lt; 1000; i++) arr[i] = 0;

function walkIn(arr) {
  for (var key in arr) arr[key]++;
}

function walkLength(arr) {
  for (var i = 0; i &lt; arr.length; i++) arr[i]++;
}

function bench(f) {
  var date = new Date();
  for (var i = 0; i &lt; 10000; i++) f(arr);
  return new Date() - date;
}

alert( 'Время walkIn: ' + bench(walkIn) + 'мс' );
alert( 'Время walkLength: ' + bench(walkLength) + 'мс' );</code></pre>
        </div>
      </div>
      
      </div><p>Теперь представим себе, что во время первого бенчмаркинга <code>bench(walkIn)</code> компьютер что-то делал параллельно важное (вдруг) и это занимало ресурсы, а во время второго – перестал. Реальная ситуация? Конечно реальна, особенно на современных ОС, где много процессов одновременно.</p>
<p><strong>Гораздо более надёжные результаты можно получить, если весь пакет тестов прогнать много раз.</strong></p>
<div data-trusted="1" class="code-example" data-highlight-block="17-23">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var arr = [];
for (var i = 0; i &lt; 1000; i++) arr[i] = 0;

function walkIn(arr) {
  for (var key in arr) arr[key]++;
}

function walkLength(arr) {
  for (var i = 0; i &lt; arr.length; i++) arr[i]++;
}

function bench(f) {
  var date = new Date();
  for (var i = 0; i &lt; 1000; i++) f(arr);
  return new Date() - date;
}

// bench для каждого теста запустим много раз, чередуя
var timeIn = 0,
  timeLength = 0;
for (var i = 0; i &lt; 100; i++) {
  timeIn += bench(walkIn);
  timeLength += bench(walkLength);
}

alert( 'Время walkIn: ' + timeIn + 'мс' );
alert( 'Время walkLength: ' + timeLength + 'мс' );</code></pre>
        </div>
      </div>
      
      </div><div class="important important_smart">
            <div class="important__header"><span class="important__type">Более точное время с <code>performance.now()</code></span></div>
            <div class="important__content"><p>В современных браузерах (кроме IE9-) вызов <a href="https://developer.mozilla.org/en-US/docs/Web/API/performance.now">performance.now()</a> возвращает количество миллисекунд, прошедшее с начала загрузки страницы. Причём именно с самого начала, до того, как загрузился HTML-файл, если точнее – с момента выгрузки предыдущей страницы из памяти.</p>
<p>Так что это время включает в себя всё, включая начальное обращение к серверу.</p>
<p>Его можно посмотреть в любом месте страницы, даже в <code>&lt;head&gt;</code>, чтобы узнать, сколько времени потребовалось браузеру, чтобы до него добраться, включая загрузку HTML.</p>
<p>Возвращаемое значение измеряется в миллисекундах, но дополнительно имеет точность 3 знака после запятой (до миллионных долей секунды!), поэтому можно использовать его и для более точного бенчмаркинга в том числе.</p>
</div></div>
<div class="important important_smart">
            <div class="important__header"><span class="important__type"><code>console.time(метка)</code> и <code>console.timeEnd(метка)</code></span></div>
            <div class="important__content"><p>Для измерения с одновременным выводом результатов в консоли есть методы:</p>
<ul>
<li><code>console.time(метка)</code> – включить внутренний хронометр браузера с меткой.</li>
<li><code>console.timeEnd(метка)</code> – выключить внутренний хронометр браузера с меткой и вывести результат.</li>
</ul>
<p>Параметр <code>&quot;метка&quot;</code> используется для идентификации таймера, чтобы можно было делать много замеров одновременно и даже вкладывать измерения друг в друга.</p>
<p>В коде ниже таймеры <code>walkIn</code>, <code>walkLength</code> – конкретные тесты, а таймер «All Benchmarks» – время «на всё про всё»:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var arr = [];
for (var i = 0; i &lt; 1000; i++) arr[i] = 0;

function walkIn(arr) {
  for (var key in arr) arr[key]++;
}

function walkLength(arr) {
  for (var i = 0; i &lt; arr.length; i++) arr[i]++;
}

function bench(f) {
  for (var i = 0; i &lt; 10000; i++) f(arr);
}

console.time(&quot;All Benchmarks&quot;);

console.time(&quot;walkIn&quot;);
bench(walkIn);
console.timeEnd(&quot;walkIn&quot;);

console.time(&quot;walkLength&quot;);
bench(walkLength);
console.timeEnd(&quot;walkLength&quot;);

console.timeEnd(&quot;All Benchmarks&quot;);</code></pre>
        </div>
      </div>
      
      </div><p><strong>При запуске этого примера нужно открыть консоль, иначе вы ничего не увидите.</strong></p>
</div></div>
<div class="important important_warn">
            <div class="important__header"><span class="important__type">Внимание, оптимизатор!</span></div>
            <div class="important__content"><p>Современные интерпретаторы JavaScript делают массу оптимизаций, например:</p>
<ol>
<li>Автоматически выносят инвариант, то есть постоянное в цикле значение типа <code>arr.length</code>, за пределы цикла.</li>
<li>Стараются понять, значения какого типа хранит данная переменная или массив, какую структуру имеет объект и, исходя из этого, оптимизировать внутренние алгоритмы.</li>
<li>Выполняют простейшие операции, например сложение явно заданных чисел и строк, на этапе компиляции.</li>
<li>Могут обнаружить, что некий код, например присваивание к неиспользуемой локальной переменной, ни на что не влияет и вообще исключить его из выполнения, хотя делают это редко.</li>
</ol>
<p>Эти оптимизации могут влиять на результаты тестов, поэтому измерять скорость базовых операций JavaScript («проводить микробенчмаркинг») до того, как вы изучите внутренности JavaScript-интерпретаторов и поймёте, что они реально делают на таком коде, не рекомендуется.</p>
</div></div>
<h2><a class="main__anchor" name="форматирование-и-вывод-дат" href="#форматирование-и-вывод-дат">Форматирование и вывод дат</a></h2><p>Во всех браузерах, кроме IE10-, поддерживается новый стандарт <a href="http://www.ecma-international.org/publications/standards/Ecma-402.htm">Ecma 402</a>, который добавляет специальные методы для форматирования дат.</p>
<p>Это делается вызовом <code>date.toLocaleString(локаль, опции)</code>, в котором можно задать много настроек. Он позволяет указать, какие параметры даты нужно вывести, и ряд настроек вывода, после чего интерпретатор сам сформирует строку.</p>
<p>Пример с почти всеми параметрами даты и русским, затем английским (США) форматированием:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var date = new Date(2014, 11, 31, 12, 30, 0);

var options = {
  era: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  weekday: 'long',
  timezone: 'UTC',
  hour: 'numeric',
  minute: 'numeric',
  second: 'numeric'
};

alert( date.toLocaleString(&quot;ru&quot;, options) ); // среда, 31 декабря 2014 г. н.э. 12:30:00
alert( date.toLocaleString(&quot;en-US&quot;, options) ); // Wednesday, December 31, 2014 Anno Domini 12:30:00 PM</code></pre>
        </div>
      </div>
      
      </div><p>Вы сможете подробно узнать о них в статье <a href="intl.htm">Intl: интернационализация в JavaScript</a>, которая посвящена этому стандарту.</p>
<p><strong>Методы вывода без локализации:</strong></p>
<p><code>toString()</code>, <code>toDateString()</code>, <code>toTimeString()</code>
Возвращают стандартное строчное представление, не заданное жёстко в стандарте, а зависящее от браузера. Единственное требование к нему – читаемость человеком. Метод <code>toString</code> возвращает дату целиком, <code>toDateString()</code> и <code>toTimeString()</code> – только дату и время соответственно.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date();

alert( d.toString() ); // вывод, похожий на 'Wed Jan 26 2011 16:40:50 GMT+0300'</code></pre>
        </div>
      </div>
      
      </div><p><code>toUTCString()</code>
То же самое, что <code>toString()</code>, но дата в зоне UTC.</p>
<p><code>toISOString()</code>
Возвращает дату в формате ISO Детали формата будут далее. Поддерживается современными браузерами, не поддерживается IE8-.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date();

alert( d.toISOString() ); // вывод, похожий на '2011-01-26T13:51:50.417Z'</code></pre>
        </div>
      </div>
      
      </div><p>Если хочется иметь большую гибкость и кросс-браузерность, то также можно воспользоваться специальной библиотекой, например <a href="http://momentjs.com/">Moment.JS</a> или написать свою функцию форматирования.</p>
<h2><a class="main__anchor" name="разбор-строки-date-parse" href="#разбор-строки-date-parse">Разбор строки, Date.parse</a></h2><p>Все современные браузеры, включая IE9+, понимают даты в упрощённом формате ISO 8601 Extended.</p>
<p>Этот формат выглядит так: <code>YYYY-MM-DDTHH:mm:ss.sssZ</code>, где:</p>
<ul>
<li><code>YYYY-MM-DD</code> – дата в формате год-месяц-день.</li>
<li>Обычный символ <code>T</code> используется как разделитель.</li>
<li><code>HH:mm:ss.sss</code> – время: часы-минуты-секунды-миллисекунды.</li>
<li>Часть <code>'Z'</code> обозначает временную зону – в формате <code>+-hh:mm</code>, либо символ <code>Z</code>, обозначающий UTC. По стандарту её можно не указывать, тогда UTC, но в Safari с этим ошибка, так что лучше указывать всегда.</li>
</ul>
<p>Также возможны укороченные варианты, например <code>YYYY-MM-DD</code> или <code>YYYY-MM</code> или даже только <code>YYYY</code>.</p>
<p>Метод <code>Date.parse(str)</code> разбирает строку <code>str</code> в таком формате и возвращает соответствующее ей количество миллисекунд. Если это невозможно, <code>Date.parse</code> возвращает <code>NaN</code>.</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var msUTC = Date.parse('2012-01-26T13:51:50.417Z'); // зона UTC

alert( msUTC ); // 1327571510417 (число миллисекунд)</code></pre>
        </div>
      </div>
      
      </div><p>С таймзоной <code>-07:00 GMT</code>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var ms = Date.parse('2012-01-26T13:51:50.417-07:00');

alert( ms ); // 1327611110417 (число миллисекунд)</code></pre>
        </div>
      </div>
      
      </div><div class="important important_smart">
            <div class="important__header"><span class="important__type">Формат дат для IE8-</span></div>
            <div class="important__content"><p>До появления спецификации ECMAScript 5 формат не был стандартизован, и браузеры, включая IE8-, имели свои собственные форматы дат. Частично, эти форматы пересекаются.</p>
<p>Например, код ниже работает везде, включая старые IE:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var ms = Date.parse(&quot;January 26, 2011 13:51:50&quot;);

alert( ms );</code></pre>
        </div>
      </div>
      
      </div><p>Вы также можете почитать о старых форматах IE в документации к методу  <a href="http://msdn.microsoft.com/en-us/library/k4w173wk%28v=vs.85%29.aspx">MSDN Date.parse</a>.</p>
<p>Конечно же, сейчас лучше использовать современный формат. Если же нужна поддержка IE8-, то метод <code>Date.parse</code>, как и ряд других современных методов, добавляется библиотекой <a href="https://github.com/kriskowal/es5-shim">es5-shim</a>.</p>
</div></div>
<h2><a class="main__anchor" name="метод-date-now" href="#метод-date-now">Метод Date.now()</a></h2><p>Метод <code>Date.now()</code> возвращает дату сразу в виде миллисекунд.</p>
<p>Технически, он аналогичен вызову <code>+new Date()</code>, но в отличие от него не создаёт промежуточный объект даты, а поэтому – во много раз быстрее.</p>
<p>Его использование особенно рекомендуется там, где производительность при работе с датами критична. Обычно это не на веб-страницах, а, к примеру, в разработке игр на JavaScript.</p>
<h2><a class="main__anchor" name="итого" href="#итого">Итого</a></h2><ul>
<li>Дата и время представлены в JavaScript одним объектом: <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/">Date</a>. Создать «только время» при этом нельзя, оно должно быть с датой. Список методов <code>Date</code> вы можете найти в справочнике <a href="http://javascript.ru/Date">Date</a> или выше.</li>
<li>Отсчёт месяцев начинается с нуля.</li>
<li>Отсчёт дней недели (для <code>getDay()</code>) тоже начинается с нуля (и это воскресенье).</li>
<li>Объект <code>Date</code> удобен тем, что автокорректируется. Благодаря этому легко сдвигать даты.</li>
<li>При преобразовании к числу объект <code>Date</code> даёт количество миллисекунд, прошедших с 1 января 1970 UTC. Побочное следствие – даты можно вычитать, результатом будет разница в миллисекундах.</li>
<li>Для получения текущей даты в миллисекундах лучше использовать <code>Date.now()</code>, чтобы не создавать лишний объект <code>Date</code> (кроме IE8-)</li>
<li>Для бенчмаркинга лучше использовать <code>performance.now()</code> (кроме IE9-), он в 1000 раз точнее.</li>
</ul>
</div></article><div class="tasks"><h2 id="tasks" class="tasks__title"><a href="#tasks" class="main__anchor main__anchor_noicon tasks__title-anchor">Задачи</a></h2><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#создайте-дату" name="создайте-дату" class="main__anchor">Создайте дату</a></h3><a href="task/new-date.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Создайте объект <code>Date</code> для даты: 20 февраля 2012 года, 3 часа 12 минут.</p>
<p>Временная зона – местная. Выведите его на экран.</p>
<button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Дата в местной временной зоне создается при помощи <code>new Date</code>.</p>
<p>Месяцы начинаются с нуля, так что февраль имеет номер 1. Параметры можно указывать с точностью до минут:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date(2012, 1, 20, 3, 12);
alert( d );</code></pre>
        </div>
      </div>
      
      </div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#имя-дня-недели" name="имя-дня-недели" class="main__anchor">Имя дня недели</a></h3><a href="task/get-week-day.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Создайте функцию <code>getWeekDay(date)</code>, которая выводит текущий день недели в коротком формате „пн“, „вт“,  … „вс“.</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var date = new Date(2012,0,3);  // 3 января 2012
alert( getWeekDay(date) );      // Должно вывести 'вт'</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/3NpbPMyOS9fDsh2ZAsmW?p=preview" target="_blank" data-plunk-id="3NpbPMyOS9fDsh2ZAsmW">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Метод <code>getDay()</code> позволяет получить номер дня недели, начиная с воскресенья.</p>
<p>Запишем имена дней недели в массив, чтобы можно было их достать по номеру:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getWeekDay(date) {
  var days = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];

  return days[date.getDay()];
}

var date = new Date(2014, 0, 3); // 3 января 2014
alert( getWeekDay(date) ); // 'пт'</code></pre>
        </div>
      </div>
      
      </div><p>В современных браузерах можно использовать и <code>toLocaleString</code>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var date = new Date(2014, 0, 3); // 3 января 2014
alert( date.toLocaleString('ru', {weekday: 'short'}) ); // 'Пт'</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/EWVNghJ2j6FgEMAYJcAh?p=preview" target="_blank" data-plunk-id="EWVNghJ2j6FgEMAYJcAh">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#день-недели-в-европейской-нумерации" name="день-недели-в-европейской-нумерации" class="main__anchor">День недели в европейской нумерации</a></h3><a href="task/weekday.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Напишите функцию, <code>getLocalDay(date)</code> которая возвращает день недели для даты <code>date</code>.</p>
<p>День нужно возвратить в европейской нумерации, т.е. понедельник имеет номер 1, вторник номер 2, …, воскресенье – номер 7.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var date = new Date(2012, 0, 3);  // 3 янв 2012
alert( getLocalDay(date) );       // вторник, выведет 2</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/XiOZnxHXyH2doLP3P8po?p=preview" target="_blank" data-plunk-id="XiOZnxHXyH2doLP3P8po">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Решение – в использовании встроенной функции <code>getDay</code>. Она полностью подходит нашим целям, но для воскресенья возвращает 0 вместо 7:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getLocalDay(date) {

  var day = date.getDay();

  if (day == 0) { // день 0 становится 7
    day = 7;
  }

  return day;
}

alert( getLocalDay(new Date(2012, 0, 3)) ); // 2</code></pre>
        </div>
      </div>
      
      </div><p>Если удобнее, чтобы день недели начинался с нуля, то можно возвращать в функции <code>day - 1</code>, тогда дни будут от 0 (пн) до 6(вс).</p>
<p><a href="http://plnkr.co/edit/0kTKCYZbhw0MjdAy0IVm?p=preview" target="_blank" data-plunk-id="0kTKCYZbhw0MjdAy0IVm">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#день-указанное-количество-дней-назад" name="день-указанное-количество-дней-назад" class="main__anchor">День указанное количество дней назад</a></h3><a href="task/get-date-ago.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 4</span></div><div class="task__content"><p>Создайте функцию <code>getDateAgo(date, days)</code>, которая возвращает число, которое было <code>days</code> дней назад от даты <code>date</code>.</p>
<p>Например, для 2 января 2015:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var date = new Date(2015, 0, 2);

alert( getDateAgo(date, 1) ); // 1, (1 января 2015)
alert( getDateAgo(date, 2) ); // 31, (31 декабря 2014)
alert( getDateAgo(date, 365) ); // 2, (2 января 2014)</code></pre>
        </div>
      </div>
      
      </div><p>P.S. Важная деталь: в процессе вычислений функция не должна менять переданный ей объект <code>date</code>.</p>
<p><a href="http://plnkr.co/edit/lYFq2Z0lshGsDJPJ9UcF?p=preview" target="_blank" data-plunk-id="lYFq2Z0lshGsDJPJ9UcF">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Из даты <code>date</code> нужно вычесть указанное количество дней.  Это просто:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getDateAgo(date, days) {
  date.setDate(date.getDate() - days);
  return date.getDate();
}</code></pre>
        </div>
      </div>
      
      </div><p>Ситуацию осложняет то, что исходный объект даты не должен меняться. Это разумное требование, оно позволит избежать сюрпризов.</p>
<p>Для того чтобы ему соответствовать, создадим копию объекта даты:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getDateAgo(date, days) {
  var dateCopy = new Date(date);

  dateCopy.setDate(date.getDate() - days);
  return dateCopy.getDate();
}

var date = new Date(2015, 0, 2);

alert( getDateAgo(date, 1) ); // 1, (1 января 2015)
alert( getDateAgo(date, 2) ); // 31, (31 декабря 2014)
alert( getDateAgo(date, 365) ); // 2, (2 января 2014)</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/Q5i0eQvSkyneYcsSKuE7?p=preview" target="_blank" data-plunk-id="Q5i0eQvSkyneYcsSKuE7">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#последний-день-месяца" name="последний-день-месяца" class="main__anchor">Последний день месяца?</a></h3><a href="task/last-day-of-month.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Напишите функцию <code>getLastDayOfMonth(year, month)</code>, которая возвращает последний день месяца.</p>
<p>Параметры:</p>
<ul>
<li><code>year</code> – 4-значный год, например 2012.</li>
<li><code>month</code> – месяц от 0 до 11.</li>
</ul>
<p>Например, <code>getLastDayOfMonth(2012, 1) = 29</code> (високосный год, февраль).</p>
<p><a href="http://plnkr.co/edit/U7cZUpGweKoDsbX7F2Or?p=preview" target="_blank" data-plunk-id="U7cZUpGweKoDsbX7F2Or">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Создадим дату из следующего месяца, но день не первый, а «нулевой» (т.е. предыдущий):</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getLastDayOfMonth(year, month) {
  var date = new Date(year, month + 1, 0);
  return date.getDate();
}

alert( getLastDayOfMonth(2012, 0) ); // 31
alert( getLastDayOfMonth(2012, 1) ); // 29
alert( getLastDayOfMonth(2013, 1) ); // 28</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/ndPHoQAy3mdSroUIWvtM?p=preview" target="_blank" data-plunk-id="ndPHoQAy3mdSroUIWvtM">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#сколько-секунд-уже-прошло-сегодня" name="сколько-секунд-уже-прошло-сегодня" class="main__anchor">Сколько секунд уже прошло сегодня?</a></h3><a href="task/get-seconds-today.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Напишите функцию <code>getSecondsToday()</code> которая возвращает, сколько секунд прошло с начала сегодняшнего дня.</p>
<p>Например, если сейчас <code>10:00</code> и не было перехода на зимнее/летнее время, то:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">getSecondsToday() == 36000 // (3600 * 10)</code></pre>
        </div>
      </div>
      
      </div><p>Функция должна работать в любой день, т.е. в ней не должно быть конкретного значения сегодняшней даты.</p>
<button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Для вывода достаточно сгенерировать объект <code>Date</code>, соответствующий началу дня, т.е. «сегодня» 00 часов 00 минут 00 секунд, и вычесть его из текущей даты.</p>
<p>Полученная разница – это как раз количество миллисекунд от начала дня, которое достаточно поделить на <code>1000</code>, чтобы получить секунды:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getSecondsToday() {
  var now = new Date();

  // создать объект из текущей даты, без часов-минут-секунд
  var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());

  var diff = now - today; // разница в миллисекундах
  return Math.floor(diff / 1000); // перевести в секунды
}

alert( getSecondsToday() );</code></pre>
        </div>
      </div>
      
      </div><p>Альтернативное решение – получить часы/минуты/секунды и преобразовать их все в секунды:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getSecondsToday() {
  var d = new Date();
  return d.getHours() * 3600 + d.getMinutes() * 60 + d.getSeconds();
};</code></pre>
        </div>
      </div>
      
      </div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#сколько-секунд-до-завтра" name="сколько-секунд-до-завтра" class="main__anchor">Сколько секунд - до завтра?</a></h3><a href="task/get-seconds-to-tomorrow.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Напишите функцию <code>getSecondsToTomorrow()</code> которая возвращает, сколько секунд осталось до завтра.</p>
<p>Например, если сейчас <code>23:00</code>, то:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">getSecondsToTomorrow() == 3600</code></pre>
        </div>
      </div>
      
      </div><p>P.S. Функция должна работать в любой день, т.е. в ней не должно быть конкретного значения сегодняшней даты.</p>
<button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Для получения оставшихся до конца дня миллисекунд нужно из «завтра 00 ч 00 мин 00 сек» вычесть текущее время.</p>
<p>Чтобы сгенерировать «завтра» – увеличим текущую дату на 1 день:</p>
<div data-trusted="1" class="code-example" data-highlight-inline="4:61-76">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function getSecondsToTomorrow() {
  var now = new Date();

  // создать объект из завтрашней даты, без часов-минут-секунд
  var tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate()+1);

  var diff = tomorrow - now; // разница в миллисекундах
  return Math.round(diff / 1000); // перевести в секунды
}</code></pre>
        </div>
      </div>
      
      </div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#вывести-дату-в-формате-дд-мм-гг" name="вывести-дату-в-формате-дд-мм-гг" class="main__anchor">Вывести дату в формате дд.мм.гг</a></h3><a href="task/format-date-ddmmyy.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 3</span></div><div class="task__content"><p>Напишите функцию <code>formatDate(date)</code>, которая выводит дату <code>date</code> в формате <code>дд.мм.гг</code>:</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var d = new Date(2014, 0, 30); // 30 января 2014
alert( formatDate(d) ); // '30.01.14'</code></pre>
        </div>
      </div>
      
      </div><p>P.S. Обратите внимание, ведущие нули должны присутствовать, то есть 1 января 2001 должно быть 01.01.01, а не 1.1.1.</p>
<p><a href="http://plnkr.co/edit/4EzYeXxhY0NF7gccm625?p=preview" target="_blank" data-plunk-id="4EzYeXxhY0NF7gccm625">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Получим компоненты один за другим.</p>
<ol>
<li>
<p>День можно получить как <code>date.getDate()</code>. При необходимости добавим ведущий ноль:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var dd = date.getDate();
if (dd &lt; 10) dd = '0' + dd;</code></pre>
        </div>
      </div>
      
      </div></li>
<li>
<p><code>date.getMonth()</code> возвратит месяц, начиная с нуля. Увеличим его на 1:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var mm = date.getMonth() + 1; // месяц 1-12
if (mm &lt; 10) mm = '0' + mm;</code></pre>
        </div>
      </div>
      
      </div></li>
<li>
<p><code>date.getFullYear()</code> вернет год в 4-значном формате. Чтобы сделать его двузначным – воспользуемся оператором взятия остатка <code>'%'</code>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var yy = date.getFullYear() % 100;
if (yy &lt; 10) yy = '0' + yy;</code></pre>
        </div>
      </div>
      
      </div><p>Заметим, что год, как и другие компоненты, может понадобиться дополнить нулем слева, причем возможно что <code>yy == 0</code> (например, 2000 год). При сложении со строкой <code>0+'0' == '00'</code>, так что будет все в порядке.</p>
</li>
</ol>
<p>Полный код:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function formatDate(date) {

  var dd = date.getDate();
  if (dd &lt; 10) dd = '0' + dd;

  var mm = date.getMonth() + 1;
  if (mm &lt; 10) mm = '0' + mm;

  var yy = date.getFullYear() % 100;
  if (yy &lt; 10) yy = '0' + yy;

  return dd + '.' + mm + '.' + yy;
}

var d = new Date(2014, 0, 30); // 30 Янв 2014
alert( formatDate(d) ); // '30.01.14'</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/OwYlV6qyChrLNdZfJZ3M?p=preview" target="_blank" data-plunk-id="OwYlV6qyChrLNdZfJZ3M">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#относительное-форматирование-даты" name="относительное-форматирование-даты" class="main__anchor">Относительное форматирование даты</a></h3><a href="task/format-date-relative.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 4</span></div><div class="task__content"><p>Напишите функцию <code>formatDate(date)</code>, которая форматирует дату <code>date</code> так:</p>
<ul>
<li>Если со времени <code>date</code> прошло менее секунды, то возвращает <code>&quot;только что&quot;</code>.</li>
<li>Иначе если со времени <code>date</code> прошло менее минуты, то <code>&quot;n сек. назад&quot;</code>.</li>
<li>Иначе если прошло меньше часа, то <code>&quot;m мин. назад&quot;</code>.</li>
<li>Иначе полная дата в формате <code>&quot;дд.мм.гг чч:мм&quot;</code>.</li>
</ul>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function formatDate(date) { /* ваш код */ }

alert( formatDate(new Date(new Date - 1)) ); // &quot;только что&quot;

alert( formatDate(new Date(new Date - 30 * 1000)) ); // &quot;30 сек. назад&quot;

alert( formatDate(new Date(new Date - 5 * 60 * 1000)) ); // &quot;5 мин. назад&quot;

alert( formatDate(new Date(new Date - 86400 * 1000)) ); // вчерашняя дата в формате &quot;дд.мм.гг чч:мм&quot;</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/WQKC2jQVjVELFk3JEMOT?p=preview" target="_blank" data-plunk-id="WQKC2jQVjVELFk3JEMOT">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><p>Для того, чтобы узнать время от <code>date</code> до текущего момента – используем вычитание дат.</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function formatDate(date) {
  var diff = new Date() - date; // разница в миллисекундах

  if (diff &lt; 1000) { // прошло менее 1 секунды
    return 'только что';
  }

  var sec = Math.floor(diff / 1000); // округлить diff до секунд

  if (sec &lt; 60) {
    return sec + ' сек. назад';
  }

  var min = Math.floor(diff / 60000); // округлить diff до минут
  if (min &lt; 60) {
    return min + ' мин. назад';
  }

  // форматировать дату, с учетом того, что месяцы начинаются с 0
  var d = date;
  d = [
    '0' + d.getDate(),
    '0' + (d.getMonth() + 1),
    '' + d.getFullYear(),
    '0' + d.getHours(),
    '0' + d.getMinutes()
  ];

  for (var i = 0; i &lt; d.length; i++) {
    d[i] = d[i].slice(-2);
  }

  return d.slice(0, 3).join('.') + ' ' + d.slice(3).join(':');
}

alert( formatDate(new Date(new Date - 1)) ); // только что

alert( formatDate(new Date(new Date - 30 * 1000)) ); // 30 сек. назад

alert( formatDate(new Date(new Date - 5 * 60 * 1000)) ); // 5 мин. назад

alert( formatDate(new Date(new Date - 86400 * 1000)) ); // вчерашняя дата в формате &quot;дд.мм.гг чч:мм&quot;</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/Ynli5UQBr7ybbFe3cMuA?p=preview" target="_blank" data-plunk-id="Ynli5UQBr7ybbFe3cMuA">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>