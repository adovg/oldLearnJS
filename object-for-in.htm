<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>JavaScript</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/all.min.css">
</head>

<body>
<div id="get_left_menu"></div>
    <div class="navbar-wrapper">
        <div class="navbar navbar-dark bg-dark box-shadow">
            <span class="hamburger-menu" id="get_mobile_menu"><i class="fas fa-bars"></i></span>
        </div>
    </div>
    <div class="main-content-wrapper">
<div class="page__inner"><main class="main main_width-limit"><header class="main__header"><div class="main__header-inner"><ol class="breadcrumbs"><li itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-1" class="breadcrumbs__item breadcrumbs__item_home"><a href="default.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title" class="breadcrumbs__hidden-text">Учебник</span></a></li><li id="breadcrumb-1" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemref="breadcrumb-2" itemprop="child" class="breadcrumbs__item"><a href="js.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Язык JavaScript</span></a></li><li id="breadcrumb-2" itemscope itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" class="breadcrumbs__item"><a href="data-structures.htm" itemprop="url" class="breadcrumbs__link"><span itemprop="title">Структуры данных</span></a></li></ol><h1 class="main__header-title">Объекты: перебор свойств</h1></div></header><div class="content"><article itemscope itemtype="http://schema.org/TechArticle"><meta itemprop="name" content="Объекты: перебор свойств"><div itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="email" content="iliakan@gmail.com"><meta itemprop="name" content="Ilya Kantor"></div><div itemprop="articleBody"><p>Для перебора всех свойств из объекта используется цикл по свойствам <code>for..in</code>. Эта синтаксическая конструкция отличается от рассмотренного ранее цикла <code>for(;;)</code>.</p>
<h2><a class="main__anchor" name="for..in" href="#for..in">for..in</a></h2><p>Синтаксис:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">for (key in obj) {
  /* ... делать что-то с obj[key] ... */
}</code></pre>
        </div>
      </div>
      
      </div><p>При этом <code>for..in</code> последовательно переберёт свойства объекта <code>obj</code>, имя каждого свойства будет записано в  <code>key</code> и вызвано тело цикла.</p>
<div class="important important_smart">
            <div class="important__header"><span class="important__type">Объявление переменной в цикле <code>for (var key in obj)</code></span></div>
            <div class="important__content"><p>Вспомогательную переменную <code>key</code> можно объявить прямо в цикле:</p>
<div data-trusted="1" class="code-example" data-highlight-inline="0:5-12">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">for (var key in menu) {
  // ...
}</code></pre>
        </div>
      </div>
      
      </div><p>Так иногда пишут для краткости кода. Можно использовать и любое другое название, кроме <code>key</code>, например <code>for(var propName in menu)</code>.</p>
</div></div>
<p>Пример итерации по свойствам:</p>
<div data-trusted="1" class="code-example" data-highlight-block="10-10">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var menu = {
  width: 300,
  height: 200,
  title: &quot;Menu&quot;
};

for (var key in menu) {
  // этот код будет вызван для каждого свойства объекта
  // ..и выведет имя свойства и его значение

  alert( &quot;Ключ: &quot; + key + &quot; значение: &quot; + menu[key] );
}</code></pre>
        </div>
      </div>
      
      </div><p>Обратите внимание, мы использовали квадратные скобки <code>menu[key]</code>. Как уже говорилось, если имя свойства хранится в переменной, то обратиться к нему можно только так, не через точку.</p>
<h2><a class="main__anchor" name="количество-свойств-в-объекте" href="#количество-свойств-в-объекте">Количество свойств в объекте</a></h2><p>Как узнать, сколько свойств хранит объект?</p>
<p>Готового метода для этого нет.</p>
<p>Самый кросс-браузерный способ – это сделать цикл по свойствам и посчитать, вот так:</p>
<div data-trusted="1" class="code-example" data-highlight-block="6-10">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var menu = {
  width: 300,
  height: 200,
  title: &quot;Menu&quot;
};

var counter = 0;

for (var key in menu) {
  counter++;
}

alert( &quot;Всего свойств: &quot; + counter );</code></pre>
        </div>
      </div>
      
      </div><p>В следующих главах мы пройдём массивы и познакомимся с другим, более коротким, вызовом: <code>Object.keys(menu).length</code>.</p>
<h2><a class="main__anchor" name="в-каком-порядке-перебираются-свойства" href="#в-каком-порядке-перебираются-свойства">В каком порядке перебираются свойства?</a></h2><p>Для примера, рассмотрим объект, который задаёт список опций для выбора страны:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var codes = {
  // телефонные коды в формате &quot;код страны&quot;: &quot;название&quot;
  &quot;7&quot;: &quot;Россия&quot;,
  &quot;38&quot;: &quot;Украина&quot;,
  // ..,
  &quot;1&quot;: &quot;США&quot;
};</code></pre>
        </div>
      </div>
      
      </div><p>Здесь мы предполагаем, что большинство посетителей из России, и поэтому начинаем с <code>7</code>, это зависит от проекта.</p>
<p>При выборе телефонного кода мы хотели бы предлагать варианты, начиная с первого. Обычно на основе списка генерируется <code>select</code>, но здесь нам важно не это, а важно другое.</p>
<p><strong>Правда ли, что при переборе <code>for(key in codes)</code> ключи <code>key</code> будут перечислены именно в том порядке, в котором заданы?</strong></p>
<p><strong>По стандарту – нет. Но некоторое соглашение об этом, всё же, есть.</strong></p>
<p>Соглашение говорит, что если имя свойства – нечисловая строка, то такие ключи всегда перебираются в том же порядке, в каком присваивались. Так получилось по историческим причинам и изменить это сложно: поломается много готового кода.</p>
<p>С другой стороны, если имя свойства – число или числовая строка, то все современные браузеры сортируют такие свойства в целях внутренней оптимизации.</p>
<p>К примеру, рассмотрим объект с заведомо нечисловыми свойствами:</p>
<div data-trusted="1" class="code-example" data-highlight-block="6-6">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var user = {
  name: &quot;Вася&quot;,
  surname: &quot;Петров&quot;
};
user.age = 25;

// порядок перебора соответствует порядку присвоения свойства
for (var prop in user) {
  alert( prop ); // name, surname, age
}</code></pre>
        </div>
      </div>
      
      </div><p>А теперь – что будет, если перебрать объект с кодами?</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var codes = {
  // телефонные коды в формате &quot;код страны&quot;: &quot;название&quot;
  &quot;7&quot;: &quot;Россия&quot;,
  &quot;38&quot;: &quot;Украина&quot;,
  &quot;1&quot;: &quot;США&quot;
};

for (var code in codes) alert( code ); // 1, 7, 38</code></pre>
        </div>
      </div>
      
      </div><p>При запуске этого кода в современном браузере мы увидим, что на первое место попал код США!</p>
<p>Нарушение порядка возникло, потому что ключи численные. Интерпретатор JavaScript видит, что строка на самом деле является числом и преобразует ключ в немного другой внутренний формат. Дополнительным эффектом внутренних оптимизаций является сортировка.</p>
<p><strong>А что, если мы хотим, чтобы порядок был именно таким, какой мы задали?</strong></p>
<p>Это возможно. Можно применить небольшой хак, который заключается в том, чтобы сделать все ключи нечисловыми, например, добавим в начало дополнительный символ <code>'+'</code>:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var codes = {
  &quot;+7&quot;: &quot;Россия&quot;,
  &quot;+38&quot;: &quot;Украина&quot;,
  &quot;+1&quot;: &quot;США&quot;
};

for (var code in codes) {
  var value = codes[code];
  code = +code; // ..если нам нужно именно число, преобразуем: &quot;+7&quot; -&gt; 7

  alert( code + &quot;: &quot; + value ); // 7, 38, 1 во всех браузерах
}</code></pre>
        </div>
      </div>
      
      </div><h2><a class="main__anchor" name="итого" href="#итого">Итого</a></h2><ul>
<li>Цикл по ключам: <code>for (key in obj)</code>.</li>
<li>Порядок перебора соответствует порядку объявления для нечисловых ключей, а числовые – сортируются (в современных браузерах).</li>
<li>Если нужно, чтобы порядок перебора числовых ключей соответствовал их объявлению в объекте, то используют трюк: числовые ключи заменяют на похожие, но содержащие не только цифры. Например, добавляют в начало <code>+</code>, как описано в примере выше, а потом, в процессе обработки, преобразуют такие ключи в числа.</li>
</ul>
</div></article><div class="tasks"><h2 id="tasks" class="tasks__title"><a href="#tasks" class="main__anchor main__anchor_noicon tasks__title-anchor">Задачи</a></h2><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#определите-пуст-ли-объект" name="определите-пуст-ли-объект" class="main__anchor">Определите, пуст ли объект</a></h3><a href="task/is-empty.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Создайте функцию <code>isEmpty(obj)</code>, которая возвращает <code>true</code>, если в объекте нет свойств и <code>false</code> – если хоть одно свойство есть.</p>
<p>Работать должно так:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function isEmpty(obj) {
  /* ваш код */
}

var schedule = {};

alert( isEmpty(schedule) ); // true

schedule[&quot;8:30&quot;] = &quot;подъём&quot;;

alert( isEmpty(schedule) ); // false</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/4QJMs0s6t8zJl97SBWPA?p=preview" target="_blank" data-plunk-id="4QJMs0s6t8zJl97SBWPA">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function isEmpty(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
}

var schedule = {};

alert( isEmpty(schedule) ); // true

schedule[&quot;8:30&quot;] = &quot;подъём&quot;;

alert( isEmpty(schedule) ); // false</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/pOCjj2rtF7rOmUYrOHzR?p=preview" target="_blank" data-plunk-id="pOCjj2rtF7rOmUYrOHzR">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#сумма-свойств" name="сумма-свойств" class="main__anchor">Сумма свойств</a></h3><a href="task/sum-salaries.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Есть объект <code>salaries</code> с зарплатами. Напишите код, который выведет сумму всех зарплат.</p>
<p>Если объект пустой, то результат должен быть <code>0</code>.</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">&quot;use strict&quot;;

var salaries = {
  &quot;Вася&quot;: 100,
  &quot;Петя&quot;: 300,
  &quot;Даша&quot;: 250
};

//... ваш код выведет 650</code></pre>
        </div>
      </div>
      
      </div><p>P.S. Сверху стоит <code>use strict</code>, чтобы не забыть объявить переменные.</p>
<button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">&quot;use strict&quot;;

var salaries = {
  &quot;Вася&quot;: 100,
  &quot;Петя&quot;: 300,
  &quot;Даша&quot;: 250
};

var sum = 0;
for (var name in salaries) {
  sum += salaries[name];
}

alert( sum );</code></pre>
        </div>
      </div>
      
      </div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#свойство-с-наибольшим-значением" name="свойство-с-наибольшим-значением" class="main__anchor">Свойство с наибольшим значением</a></h3><a href="task/max-salary.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 5</span></div><div class="task__content"><p>Есть объект <code>salaries</code> с зарплатами. Напишите код, который выведет имя сотрудника, у которого самая большая зарплата.</p>
<p>Если объект пустой, то пусть он выводит «нет сотрудников».</p>
<p>Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">&quot;use strict&quot;;

var salaries = {
  &quot;Вася&quot;: 100,
  &quot;Петя&quot;: 300,
  &quot;Даша&quot;: 250
};

// ... ваш код выведет &quot;Петя&quot;</code></pre>
        </div>
      </div>
      
      </div><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">&quot;use strict&quot;;

var salaries = {
  &quot;Вася&quot;: 100,
  &quot;Петя&quot;: 300,
  &quot;Даша&quot;: 250
};

var max = 0;
var maxName = &quot;&quot;;
for (var name in salaries) {
  if (max &lt; salaries[name]) {
    max = salaries[name];
    maxName = name;
  }
}

alert( maxName || &quot;нет сотрудников&quot; );</code></pre>
        </div>
      </div>
      
      </div></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div><div class="task tasks__task"><div class="task__header"><div class="task__title-wrap"><h3 class="task__title"><a href="#умножьте-численные-свойства-на-2" name="умножьте-численные-свойства-на-2" class="main__anchor">Умножьте численные свойства на 2</a></h3><a href="task/multiply-numeric.htm" target="_blank" class="task__open-link"></a></div><div class="task__header-note"><span title="Насколько эта задача важна для освоения материала, от 1 до 5" class="task__importance">важность: 3</span></div><div class="task__content"><p>Создайте функцию <code>multiplyNumeric</code>, которая получает объект и умножает все численные свойства на 2. Например:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">// до вызова
var menu = {
  width: 200,
  height: 300,
  title: &quot;My menu&quot;
};

multiplyNumeric(menu);

// после вызова
menu = {
  width: 400,
  height: 600,
  title: &quot;My menu&quot;
};</code></pre>
        </div>
      </div>
      
      </div><p>P.S. Для проверки на число используйте функцию:</p>
<div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">function isNumeric(n) {
  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n)
}</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/uf4mjIBDNl29jkrhN8eA?p=preview" target="_blank" data-plunk-id="uf4mjIBDNl29jkrhN8eA">Открыть песочницу с тестами для задачи.</a></p><button type="button" class="task__solution">решение</button><div class="task__answer"><div class="task__answer-content"><div data-trusted="1" class="code-example">
      <div class="codebox code-example__codebox">
        
        <div class="toolbar codebox__toolbar">
          <div class="toolbar__tool">
            <a href="#" title="выполнить" data-action="run" class="toolbar__button toolbar__button_run"></a>
          </div>
          <div class="toolbar__tool">
            <a href="#" title="открыть в песочнице" target="_blank" data-action="edit" class="toolbar__button toolbar__button_edit"></a>
          </div>
        </div>
        <div class="codebox__code" data-code="1">
          <pre class="line-numbers language-javascript"><code class="language-javascript">var menu = {
  width: 200,
  height: 300,
  title: &quot;My menu&quot;
};

function isNumeric(n) {
  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
}

function multiplyNumeric(obj) {
  for (var key in obj) {
    if (isNumeric(obj[key])) {
      obj[key] *= 2;
    }
  }
}

multiplyNumeric(menu);

alert( &quot;menu width=&quot; + menu.width + &quot; height=&quot; + menu.height + &quot; title=&quot; + menu.title );</code></pre>
        </div>
      </div>
      
      </div><p><a href="http://plnkr.co/edit/KmmZQ9VojfZy7iAuvqtJ?p=preview" target="_blank" data-plunk-id="KmmZQ9VojfZy7iAuvqtJ">Открыть решение с тестами в песочнице.</a></p></div><button type="button" title="закрыть" class="close-button task__answer-close"></button></div></div></div></div></div></div></div>
</div>


    <div id="mobile_menu" class="mobile-menu">
        <ul class="mobile-menu__ul">

            <li class="special-links-list__item"><a href="getting-started.htm" class="special-links-list__link">Введение</a></li>
            <li class="special-links-list__item"><a href="first-steps.htm" class="special-links-list__link">Основы JavaScript</a></li>
            <li class="special-links-list__item"><a href="writing-js.htm" class="special-links-list__link">Качество кода</a></li>
            <li class="special-links-list__item"><a href="data-structures.htm" class="special-links-list__link">Структуры данных</a></li>
            <li class="special-links-list__item"><a href="functions-closures.htm" class="special-links-list__link">Замыкания, область видимости</a></li>
            <li class="special-links-list__item"><a href="objects-more.htm" class="special-links-list__link">Методы объектов и контекст вызова</a></li>
            <li class="special-links-list__item"><a href="js-misc.htm" class="special-links-list__link">Некоторые другие возможности</a></li>
            <li class="special-links-list__item"><a href="oop.htm" class="special-links-list__link">ООП в функциональном стиле</a></li>
            <li class="special-links-list__item"><a href="prototypes.htm" class="special-links-list__link">ООП в прототипном стиле</a></li>
            <li class="special-links-list__item"><a href="es-modern.htm" class="special-links-list__link">Современные возможности ES-2015</a></li>


            <li class="special-links-list__item"><a href="document.htm" class="special-links-list__link">Документ и объекты страницы</a></li>
            <li class="special-links-list__item"><a href="events-and-interfaces.htm" class="special-links-list__link">Основы работы с событиями</a></li>
            <li class="special-links-list__item"><a href="event-details.htm" class="special-links-list__link">События в деталях</a></li>
            <li class="special-links-list__item"><a href="forms-controls.htm" class="special-links-list__link">Формы, элементы управления</a></li>
            <li class="special-links-list__item"><a href="widgets.htm" class="special-links-list__link">Создание графических компонентов</a></li>
            <li class="special-links-list__item"><a href="webcomponents.htm" class="course-bricks__brick-title-link main__anchor">Веб-компоненты: взгляд в будущее</a></li>
            <li><span class="sub-title">Дополнительно</span></li>
            <li class="special-links-list__item"><a href="ajax.htm" class="course-bricks__brick-title-link main__anchor">AJAX и COMET</a></li>
            <li class="special-links-list__item"><a href="animation.htm" class="course-bricks__brick-title-link main__anchor">Анимация</a></li>
            <li class="special-links-list__item"><a href="frames-and-windows.htm" class="course-bricks__brick-title-link main__anchor">Окна и Фреймы</a></li>
            <li class="special-links-list__item"><a href="css-for-js.htm" class="course-bricks__brick-title-link main__anchor">CSS для JavaScript-разработчика</a></li>
            <li class="special-links-list__item"><a href="tools.htm" class="course-bricks__brick-title-link main__anchor">Сундучок с инструментами</a></li>
            <li class="special-links-list__item"><a href="regular-expressions-javascript.htm" class="course-bricks__brick-title-link main__anchor">Регулярные выражения</a></li>
            <li class="special-links-list__item"><a href="extra.htm" class="course-bricks__brick-title-link main__anchor">О всякой всячине</a></li>
            <li class="special-links-list__item"><a href="about-this.htm" class="course-bricks__brick-title-link main__anchor">Об учебнике и авторе</a></li>

        </ul>
    </div>
     <script src="js/hammer.min.js"></script>
    <script src="js/hammer-time.min.js"></script>
    <script src="js/jquery.hammer.js"></script>
    <script src="js/scripts.js"></script>


</body>

</html>